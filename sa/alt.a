

include basic.m
include structs.m
include procs.m
include module.m

	StartModule alt -1 1000

	static
	[
		extern func	alt
	]

proc alt
[
	word	timeout			-- timeout for timer alt
	word	nchans			-- number of channels
	word	chans			-- array of channel ptrs
]
[
	word	usedbyalt
	word	i			-- array index
	word	selchan			-- index of selected channel
]
[
	ldc -3 store selchan

	talt

	ldc 0 store i
	while[ cne i nchans ]
	[
		i chans wsub ldnl 0	-- channel
		ldc 1			-- guard
		enbc			-- enable channel
		i adc 1 store i		-- i++
	]
	
	if [ timeout ]
	[
		ldtimer timeout sum	-- endtime
		ldc 1			-- guard
		enbt			-- enable timer
	]

	taltwt				-- wait for something
	
	ldc 0 store i
	while[ cne i nchans ]
	[
		i chans wsub ldnl 0	-- channel
		ldc 1			-- guard
		ldc ..selectc-..altend	-- select address
		if[ disc ]		-- disable channel
		[
			i store selchan
		]
		i adc 1 store i		-- i++		
	]
	
	if [ timeout ]
	[
		ldtimer timeout sum	-- endtime
		ldc 1			-- guard
		ldc ..selectt-..altend	-- select address		
		dist			-- enable timer
	]
	
	altend

..altend:
	ldc -2
	return
	
..selectc:
	selchan
	return

..selectt:
	ldc -1
	return
]

	EndModule

-- end of alt.a
