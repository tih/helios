--------------------------------------------------------------------------
--                                                                      --
--                      H E L I O S   K E R N E L                       --
--                      -------------------------                       --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- t8sim.a								--
--                                                                      --
--	Floating point simulation routines for the T8. These will	--
--	allow code compiled for the t4 to run on a T8.			--
--                                                                      --
--	Author:  NHG 28/7/87						--
--                                                                      --
--------------------------------------------------------------------------


include basic.m
include procs.m
include structs.m
include debug.m
include module.m

	StartModule t4sim -1 1000

	static
	[
		extern	func	real32op
		extern	func	real32rem
		extern	func	real32eq
		extern	func	real32gt
		extern	func	real32toint32
		extern	func	int32toreal32
		extern	func	real32toreal64

		extern	func	real64op
		extern	func	real64rem
		extern	func	real64eq
		extern	func	real64gt
		extern	func	real64toint32
		extern	func	int32toreal64
		extern	func	real64toreal32		

		extern	func	sqrt
	]


kproc real32op
[
	word		 a1
	word		 op
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	critical
	[
		test[ceq op [ldc 0]][ fpadd ]
		[ test[ceq op [ldc 1]][ fpsub ]
		  [ test[ceq op [ldc 2]][ fpmul ] [ fpdiv ] ]
		]
	]

	ptr a1 fpstnlsn
	a1
]

kproc real32rem
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpremfirst
	eqc 0
	cj ..rem32done
..rem32loop:
	fpremstep
	cj ..rem32loop
..rem32done:

	ptr a1 fpstnlsn
	a1
	
]

kproc real32eq
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpeq
]

kproc real32gt
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpgt
]

kproc real32toint32
[
	word		 mode
	word		 r
]
[]
[
	critical
	[
		ptr r fpldnlsn
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fprtoi32
		ptr r fpstnli32
		r
	]
]

kproc int32toreal32
[
	word		 mode
	word		 i
]
[]
[
	critical
	[
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		ptr i fpi32tor32
		ptr i fpstnlsn
		i
	]
]

kproc real32toreal64
[
	word		 d
	word		 s
]
[]
[
	ptr s fpldnlsn
	fpur32tor64
	d fpstnldb
]


kproc real64op
[
	word		 res
	word		 a1
	word		 op
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	critical
	[
		test[ceq op [ldc 0]][ fpadd ]
		[ test[ceq op [ldc 1]][ fpsub ]
		  [ test[ceq op [ldc 2]][ fpmul ] [ fpdiv ] ]
		]
	]

	res fpstnldb
]

kproc real64rem
[
	word		 res
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpremfirst
	eqc 0
	cj ..rem64done
..rem64loop:
	fpremstep
	cj ..rem64loop
..rem64done:

	res fpstnldb
]

kproc real64eq
[
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpeq
]

kproc real64gt
[
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpgt
]

kproc real64toint32
[
	word		 mode
	word		 r
]
[]
[
	critical
	[
		r fpldnldb
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fprtoi32
		ptr r fpstnli32
		r
	]
]

kproc int32toreal64
[
	word		 res
	word		 i
]
[]
[
	ptr i fpi32tor64
	res fpstnldb
]

kproc real64toreal32
[
	word		mode
	word		d
]
[]
[
	critical
	[
		d fpldnldb
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fpur64tor32
		ptr d fpstnlsn
		d
	]
]

proc sqrt
[
	word		dest	-- pointer to result
	word		x1	-- double parameter
	word		x2
]
[
]
[
	ptr x1
	fpldnldb
	fpusqrtfirst
	fpusqrtstep
	fpusqrtstep
	fpusqrtstep
	fpusqrtstep
	fpusqrtstep
	fpusqrtlast
	dest
	fpstnldb	
]

	EndModule

-- End of t8sim.a
