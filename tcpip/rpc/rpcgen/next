rpc_clntout.c: 		for (proc = vp->procs; proc != NULL; proc = proc->next) {
rpc_clntout.c: 			ptype(proc->res_prefix, proc->res_type, 1);
rpc_clntout.c: 			pvname(proc->proc_name, vp->vers_num);
rpc_clntout.c: 			ptype(proc->arg_prefix, proc->arg_type, 1);
rpc_clntout.c: 	if (streq(proc->res_type, "void")) {
rpc_clntout.c: 		ptype(proc->res_prefix, proc->res_type, 0);
rpc_clntout.c: 	f_print(fout, "\tbzero(%sres, sizeof(res));\n", ampr(proc->res_type));
rpc_clntout.c: 		proc->proc_name, stringfix(proc->arg_type),
rpc_clntout.c: 		stringfix(proc->res_type), ampr(proc->res_type));
rpc_clntout.c: 	if (streq(proc->res_type, "void")) {
rpc_clntout.c: 			ampr(proc->res_type));
rpc_clntout.c: 		f_print(fout, "\treturn (%sres);\n", ampr(proc->res_type));
rpc_hout.c: 		for (proc = vers->procs; proc != NULL; proc = proc->next) {
rpc_hout.c: 			} else if (streq(proc->proc_name, stop->proc_name)) {
rpc_hout.c: 		for (proc = vers->procs; proc != NULL; proc = proc->next) {
rpc_hout.c: 				puldefine(proc->proc_name, proc->proc_num);
rpc_hout.c: 	if (proc->res_prefix) {
rpc_hout.c: 		if (streq(proc->res_prefix, "enum")) {
rpc_hout.c: 	if (streq(proc->res_type, "bool")) {
rpc_hout.c: 	} else if (streq(proc->res_type, "string")) {
rpc_hout.c: 		f_print(fout, "%s *", fixtype(proc->res_type));
rpc_hout.c: 	pvname(proc->proc_name, vp->vers_num);
rpc_svcout.c: 		for (proc = vp->procs; proc != NULL; proc = proc->next) {
rpc_svcout.c: 			if (streq(proc->arg_type, "void")) {
rpc_svcout.c: 			ptype(proc->arg_prefix, proc->arg_type, 0);
rpc_svcout.c: 			pvname(proc->proc_name, vp->vers_num);
rpc_svcout.c: 		for (proc = vp->procs; proc != NULL; proc = proc->next) {
rpc_svcout.c: 			f_print(fout, "\tcase %s:\n", proc->proc_name);
rpc_svcout.c: 				stringfix(proc->arg_type));
rpc_svcout.c: 				stringfix(proc->res_type));
rpc_svcout.c: 			pvname(proc->proc_name, vp->vers_num);
rpc_svcout.c: 	for (; proc != NULL; proc = proc->next) {
rpc_svcout.c: 		if (streq(proc->proc_num, "0")) {
