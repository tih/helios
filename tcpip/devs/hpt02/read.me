               CORAL/Helios Ethernet support, distribution notes
	       =================================================

1. Introduction
---------------

These notes are provided as an interim aid to installation of the CORAL HPT02
Ethernet TRAM under Helios.

It is not CORAL's policy to deliver documentation in the form of README files
on the software distribution floppy. If you do find a README file it is there
to detail known limitations and bugs in the software. Your first point of
contact if you experience any problems should be your supplier. However, do
get in touch directly if you are still having trouble.

The CORAL Ethernet support for Helios consists of a device driver, hpt02.dev,
that implements the driver interface expected by tcpip. Currently, tcpip
is not capable of sharing the Ethernet interface with any other protocol
stacks, although the CORAL low-level driver support would allow this.

2. Installation
---------------

For details of the physical installation of the HPT02, refer to the HPT02
User's guide.

The device driver hpt02.dev should be copied to /helios/lib, where tcpip
expects to find it.

3. Configuration and Initialisation
-----------------------------------

devinfo.src will need changing to support the HPT02, although the only
entry necessary is the device name, hpt02.dev. The HPT02 contains the 
Ethernet address in EEPROM, which will be read by the driver at startup, so
you don't need to specify it in devinfo.

The HPT02's T400/T425 should be configured as a Helios processor in the
resource map. Helios will recognise both the processor type and memory size
automatically.

We suggest you test and initialise tcpip manually before changing the initrc
or resource map files to start the tcpip automatically. To start tcpip on
processor "/02", you would issue a command like:

	remote -d /02 /helios/lib/tcpip <host_name> <internet_addr> -e hpt02
	remote -d /02 /helios/lib/inetd

If you run the tcpip on a TRAM without the HPT02 hardware, it will fail to
initialise. Note that unlike other, T2-based Ethernet TRAMs, you don't need
a separate compute TRAM for tcpip. When NFS client services are available
under Helios, you should be able to fit them on the HPT02 as well.

4. Setting up for normal use
----------------------------

Unless you are happy to lose your network connection when a faulty application
crashes, we reccommend you run only trusted code on the HPT02, namely tcpip
and inetd itself. You could add a

	run -e 

command to the resouce map to start tcpip, and alter the processor protection
to prevent any other code being run on the HPT02 Ethernet TRAM.

Alternatively, you could set up a run command in the initrc file, although
don't forget that you have to run remote on the HPT02 itself thus:

	run -e /helios/bin/remote remote -d /02 /helios/lib/tcpip ....
	run -e /helios/bin/remote remote -d /02 /helios/lib/inetd

5. Additional information
-------------------------

The hpt02.dev device driver code has a bug that prevents a clean shutdown.
Although DevClose() is implemented, it doesn't seem as if tcpip has a SIGINT
handler. Killing tcpip seems to crash the Helios nucleus, which is probably
caused by not withdrawing from the SetEvent() chain cleanly. This is not
normally a problem, since you won't normally kill tcpip.
