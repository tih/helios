	Helios MicroEMACS 3.11 Help screens		(24/6/92)

	M-  means to use the <ESC> key prior to using another key
	^A  means to use the control key at the same time as the A key

^V     Scroll down		M-< Begining of file
^Z     Scroll up		M-> End of file

-----------------------------------------------------------------------
	(1) MOVING THE CURSOR

^F  Forward character   M-F    Forward word
^B  Backward character  M-B    Backward word
^A  Front of line	M-G    Goto a line
^E  End of line		
^N  Next line		M-N    Front of paragraph
^P  Previous line	M-P    End of paragraph
-----------------------------------------------------------------------
	(2) DELETING & INSERTING

<--             Delete previous character (same as ^H)
^D		Delete next character
^C		Insert a space
M-<--           Delete previous word
M-D             Delete next word
M-^W		Delete paragraph
-----------------------------------------------------------------------
	(3) MORE DELETING & INSERTING

<RETURN>   	Insert a newline (same as ^M)
<TAB>  		Advance to next tab stop (same as ^I)
^J         	Insert a newline and indent  
^O		Open (insert) line
^K              Close (delete) to end of line. The text goes into the
		KILL buffer and may be retried with ^Y.
-----------------------------------------------------------------------
	(4) FAIRLY USEFUL GENERAL COMMANDS

^X^C	Exit			^G	Abort current command
M-Z	Save and exit		^L	Redraw screen	
M-~	Unmark buffer		^T	Transpose characters
^X =	Current cursor position	^U	Repeat following command
M-^L	Centre around the current cursor

-----------------------------------------------------------------------
	(5) REGIONS & THE KILL BUFFER

M-<spacebar>	set MARK at current position
^X ^X		eXchange mark and cursor
M-^G		goto mark

A REGION is the area between the mark and the current cursor position.
The KILL BUFFER is the text which has been most recently saved or deleted.
-----------------------------------------------------------------------
	(6) COPYING AND MOVING

^W  Delete (Wipe) region		M-W	copy region to KILL buffer
^Y  Yankback save buffer at cursor
Generally, the procedure for copying or moving text is:
    1)  Mark a REGION using M-<spacebar> at beginning and cursor at end.
    2)  Delete it (with ^W) or copy it (with M-W) into the KILL buffer.
    3)  Move the cursor to the desired location and yank it back (with ^Y).
-----------------------------------------------------------------------
	(7) SEARCHING

^S	Search forward from cursor position.
^R	Reverse search from cursor position.
^X S	Forward incremental search
^X R	Reverse incremental search
<ALT> S	Search for the next occurence of the last string
<ALT> R	Search for the last occurence of the last string
-----------------------------------------------------------------------
	(8) REPLACING

M-R   Replace all instances of first typed-in string with second
          typed-in string.  End each string with ESC.
M-^R  Replace with query.  Answer with:
	^G  cancel			.   exit to entry point
	!   replace the rest		Y    replace & continue
	?   Get a list of options	N   no replacement & continue
-----------------------------------------------------------------------
	(9) FOLDING

Folding involves hiding some text under a fold line.
M-J	fold the current region		M-^J	remove fold
M-O	open a fold			M-^O	close a fold
M-I	enter a fold			M-^I	exit a fold
M-T	exit all folds			M-^D	delete a fold
M-^A	search folds forwards		M-^B	search folds backwards
-----------------------------------------------------------------------
	(10) CAPITALIZING & TRANSPOSING

M-U	UPPERCASE word
M-C	Capitalize word	
M-L	lowercase word
^X ^L	lowercase region
^X ^U	uppercase region
^Q	Quote next entry, so that control codes may be entered into text
-----------------------------------------------------------------------
	(11) MODES OF OPERATION
^X M	Add mode in buffer              M-M    Add global mode
^X ^M   Delete mode in buffer           M-^M   Delete global mode
OVER		Replaces (overwrites) rather than inserts characters
WRAP		Turns on word wrap (automatic carraige return).
VIEW		Allows viewing file without insertion and deletion.
CMODE		Automatic indenting for C program entry
EXACT/MAGIC	Changes how search and replace commands work (see next page)
-----------------------------------------------------------------------
	(12) SEARCH AND REPLACE MODES

EXACT	Uppper/lower case is not ignored in searches
MAGIC   Regular pattern matching characters are active
    .   Matches any one character
    *   Matches any any number of the preceding character
    ^   Beginning of line        [ ]   Character class enclosure
    $   End of line              \     Quote next character
-----------------------------------------------------------------------
	(13) ON-SCREEN FORMATTING

^X F		Set fill column
Mn-<tab>	Set tab spacing to n charecters between tabs stops
M-Q		Format paragraph so that text lies between margins
^X =		Position report -- displays line number, char count,
                                   file size and character under cursor
M-^C		Count words/lines/chars in marked region
-----------------------------------------------------------------------
	(14) MULTIPLE WINDOWS

Many WINDOWS may be active at once on the screen.  All windows may show
different parts of the same buffer, or each may display a different one.
^X 2	Split the current window in two	^X O	Change to next window
^X 0    delete current window           ^X P    Change to previous window
^X 1	delete all other windows        M-^V    Page down next window
                                  	M-^Z	Page up other window
-----------------------------------------------------------------------
	(15) CONTROLLING WINDOWS AND THE SCREEN

^X ^    Enlarge current window   M-<n> ^X W   Resize window to <n> lines
^X ^Z   Shrink current window 
^X ^N   Move window down
^X ^P   Move window up
M-^L    Reposition window
^L      Refresh the screen
-----------------------------------------------------------------------
	(16) MULTIPLE BUFFERS
A BUFFER is a named area containing a document being edited.  Many buffers
may be activated at once.
^X B	Switch to another buffer.  <CR> = use just-previous buffer
^X X	Switch to next buffer in buffer list
M-^N    Change name of current buffer
^X K	Delete a non-displayed buffer.
^X ^B	Display buffer directory in a window
-----------------------------------------------------------------------
	(17) READING FROM DISK

^X ^F	Find file; read into a new buffer created from filename.
	(This is the usual way to begin editing a new file.)
^X ^R	Read file into current buffer, erasing its previous contents.
	No new buffer will be created.
^X ^I	Insert file into current buffer at cursor's location.
^X ^V	Find a file to make current in VIEW mode
-----------------------------------------------------------------------
	(18) SAVING TO DISK

^X ^S	Save current buffer to disk
^X ^W	Write current buffer to disk
^X N    Change file name of current buffer
M-Z	Write out all changed buffers and exit MicroEMACS


-----------------------------------------------------------------------
	(19) ACCESSING THE OPERATING SYSTEM

^X !	Send one command to the operating system and return
^X @	Pipe command into buffer
^X #	Filter buffer through external program
^X C	Start a new command processor under MicroEMACS
^X $	Run a command immediately, without going via a shell
^X ^C	Exit MicroEMACS
-----------------------------------------------------------------------
	(20) KEY BINDINGS AND COMMANDS

M-K	Bind a key to a command        M-A  Describe a class of commands
M-^K	Unbind a key from a command
^X ?	Describe command bound to a key
M-X	Execute a named (and possibly unbound) command
{Describe-bindings}
	Display a list of all commands and key bindings to a buffer
-----------------------------------------------------------------------
	(21) COMMAND EXECUTION
Commands can be specified as command lines in the form:
	<optional repeat count> {command-name} <optional arguments>
{Execute-command-line}	execute a typed in command line
{Execute-buffer}	executes commands lines in a buffer
{Execute-file}		executes command lines from a file
{clear-message-line}	clears the message line during execution

-----------------------------------------------------------------------
	(22) MACRO EXECUTION

^X (	Start recording keyboard macro
^X )	Stop recording keyboard macro
^X E	Execute keyboard macro
M-<n> {store-macro}	Start recording named macro
      !endm		Stop recording named macro
{execute-macro-n}	Execute macro n (where n is from 1 to 20)
-----------------------------------------------------------------------
	(23) SPECIAL KEYS

^G		Cancel current command and return to top level of processing.
^U or		Universal repeat.  May be followed by an integer (default = 4)
M-<digit>	and repeats the next command that many times.
M-X		Execute a named (and possibly unbound) command


