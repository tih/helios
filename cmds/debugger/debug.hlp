
	Helios Source Debugger - Help File

Commands

 Commands nearly all take the form:

 <command> <options> <arguments>

 Options are all of the form -<name>, where only the first letter of <name> is
 significant. A command list is a list of commands separated by semicolons and
 optionally enclosed in square brackets. Command lists are often used as
 arguments to other commands, in this case the command must be enclosed in
 square brackets.

--------------------------------------------------------------------------------

Macros

 There are two types of macro: command alias macros, and define macros.
 Alias macros are command name synonyms which only expand when used as the first
 word of a command. Define macros expand when used anywhere on a command line,
 but must be preceded by a dollar character '$'.

 There are some special define macros supported:

 buf		last command input line
 curfile	file the cursor is in
 curline	line the cursor is at
 curloc		location the cursor is at
 file		file the program is in
 line		line the program is at
 loc		location the program is at
 txt		word under the cursor

--------------------------------------------------------------------------------

Key Bindings

 Key bindings are created using the key command.
 The standard startup file defines the following key bindings.

 ^A	Create a command alias
 ^B	Toggle breakpoint at cursor location
 ^D	Create a define macro
 ^E	Edit
 ^F	Find a string
 ^G	Go
 ^H	Home
 ^K	Kill process
 ^L	Refresh screen
 ^O	Step over
 ^P	Display the programs environment
 ^Q	Quit
 ^R	Execute the current function
 ^S	Execute a single statement
 ^T	Timeout
 ^U	Go until cursor location
 ^V	View
 ^W	Where

 DELETE	Stop execution of all process
 HELP	Access online help information
 HOME	View the current program location
 RETURN	Display value of variable/expression under cursor
 SPACE	Re-invoke last command
 UNDO	Quit

 F1	General menu
 F2	Monitor menu
 F3	Control menu
 F4	Process control menu
 F5	Macro menu
 F6	Development menu
 F7	List menu
 F8	Delete Menu
 F9	Search menu

 Shift-F1 Next Thread
 Shift-F2 Previous Thread

--------------------------------------------------------------------------------

Expressions

 Some commands take arguments which are source language expressions. Any valid
 C expression whose variables are all in scope may be used. All C operators
 are supported including the assignment operators. So it is possible to assign
 values to variables as well as display their current value. The type legality
 and conversion rules for operators is adhered to with some extensions. For
 instance, an object can be cast to any type of the same size. Thus,

 print (struct {short high; short low;})i

 is valid in the debugger, assuming i is of type int, whereas it is not legal C.
 Function calls can be included in expressions. The current implementation of
 the debugger actual executes the function.
