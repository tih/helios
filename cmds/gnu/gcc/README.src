This directory contains gcc version 1.35 source and Makefiles. This README
describes how to install gcc on your machine. Once you have compiled gcc on
your machine you will need to go to the ../bin directory to run the benchmark.

     1. To port gcc to your machine you will need to
	link config.h to

		a) config/xm-m68k.h if your machine runs a variant of
		BSD Unix.  This is the default setting.

		b) config/xm-hp9k320.h if your machine runs a variant
		of System V Unix.

	This directory contains gcc1.35 pretty much as it was downloaded
	from prep.ai.mit.edu.  The only changes that were made are in
        config/tm-sun3.h.  If you are lucky then the only change you
	will need to make is the config.h link described above.

	Refer to README.GNU and INSTALL if you have problems
	installing this software. Note that you should NOT run the
	script config.gcc since tm.h is already linked to config/tm-sun3.h
	and md is linked to config/m68k.md.  This is to ensure that
	gcc generates Sun-3 executables.

     2. Copy the file Makefile.orig to Makefile.
	Change the CFLAGS variable in Makefile so as to compile
	gcc with the highest possible optimization for your machine.
	The file Makefile.sun is a sample Makefile for Sun machines.
	Makefile.mips is a sample makefile for MIPS machines and the
	DECstation 3100.

     3. Use the script Run-make to make gcc. This script stores a
	log of the make in the file Make.log.`hostname`. You can refer
	to this file later to correct problems with the make. It also
	gives others an idea of the optimizations you used so that
	they can attempt to reproduce your numbers.
	Run-make is run by simply typing "Run-make", however, it will
	accept and pass on any command line arguements to the make
	command.
	A few sample Make.logs have been included for the DECstation 3100,
	the MIPS M/2000 and a Sun-4. These should give you an idea of the
	warning messages that were generated at compile time.

	If you need to make any changes to the source code please put
	a comment with the date, your organizations name, and a description
	of the change, and the reasons for the change at the place
	where the change is made.

     4. After completing the compilation successfully save your
	Makefile in a file called Makefile.<your-organization>.

     5. Once the compilation is finished you are ready to start
	executing the benchmark.  cd to ../bin and type
	Run-gcc [iterations]. The default is 5 iterations.	

    6. The results will be left in a directory called ../res/gcc.time.
