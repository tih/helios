This file lists future projects and enhancements for gawk.  Items are listed
in roughly the order they will be done for a given release.  This file is
mainly for use by the developers to help keep themselves on track, please
don't bug us too much about schedules or what all this really means.

Still to go in 2.13
===================

4/18/91: MOSTLY DONE: Make printf fully compatible with the ANSI C spec.

4/18/91: DONE: Supply a warning for:	/foo/ ~ exp,  /foo/ !~ exp

4/19/91: DONE: Fix CONVFMT and OFMT interaction

3/19/91: DONE: move -C, -V, -c options to -W ala posix

3/19/91: DONE: -W posix option, throw out \x

3/19/91: DONE: clean up ifdef stuff, go to config.h

3/19/91: DONE: -W lint option

4/5/91: DONE: change from time and ctime to sysclock and strftime

4/21/91: DONE: make /dev/fd checking happen at run time

4/14/91: DONE: man page fix up

4/17/91: DONE: Table driven built-in subroutine argument count checking

Update regex.h flags for AWK and feed back to FSF

Feedback alloca.s changes to FSF

Brief manual clean up

4/18/91: DONE: Provide a list of systems
			a) where gawk has been ported
			b) where it has run the test suite

For 2.14
========

more lint: check for use of builtin vars. only in new awk.

Extensible hashing and on-disk storage of awk arrays

"restart" keyword

"nextfile" keyword

Add |&

Warn or fatal if identifier used as both variable and array

Split() with null string as third arg to split up strings

Allow RS to be a regexp.

RECLEN variable for fixed length records

Make 	awk '/foo/' files...	run like egrep

Extensive manual cleanup:

	Use of texinfo 2.0 features

	Variables string or numeric or both

	Lots more examples

	Add an error messages section to the manual

	A section on where gawk is bounded
		regex
		i/o
		sun fp conversions

Do a reference card

? Have strftime() pay attention to the value of ENVIRON["TZ"]

In 2.15 or later
================

Allow OFMT to be other than a floating point format.

SFIO based printf and other i/o

Allow redefining of builtin functions?

Make regex + dfa less dependant on gawk header file includes

A general sub function	edsub(line, pat, sub, global-flag)

Add lint checking everywhere

Make it faster and smaller.

Create a gawk-to-C translator? (or C++??)

Create a gawk compiler?

Do an optimization pass over parse tree?

Provide awk profiling and debugging.
