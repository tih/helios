.SUFFIXES: .c .o

# REMOTE gives the prefix to cc and asm command
# so they can be executed on remote processors

#REMOTE = remote 01
REMOTE =

#CC = $(REMOTE) c
#LD = $(REMOTE) asm
#CFLAGS = -wvdf
#LIB = /helios/lib
#LOCALDIR = /helios/local

CC       = c
LD       = ldc40
CFLAGS   = -wvdf -c
LIB      = /hprod/C40/lib
LOCALDIR = /hprod/C40/local

.c.o:
#	$(CC) $(CFLAGS) $*.c | asm -p -o $*.o
	$(CC) $(CFLAGS) $*.c

# Now Really!      LPRFLAGS = -Pucbvax

OBJECTS = lr0.o allocate.o closure.o conflict.o derives.o files.o	\
	  getargs.o gram.o lalr.o					\
	  lex.o main.o nullable.o output.o print.o reader.o symtab.o	\
	  warshall.o alloca.o

CFILES  = lr0.c allocate.c closure.c conflict.c derives.c files.c	\
	  getargs.c gram.c lalr.c					\
	  lex.c main.c nullable.c output.c print.c reader.c symtab.c	\
	  warshall.c

FILES   = Makefile files.h gram.h lex.h machine.h new.h state.h		\
	  symtab.h types.h $(CFILES)

start: bison

files.o:  files.h

lex.o:  lex.h

symtab.o:  symtab.h
alloca.o: alloca.c
#	$(CC) $(CFLAGS) -DSTACK_DIRECTION=-1 alloca.c | asm -p -o alloca.o
	$(CC) $(CFLAGS) -DSTACK_DIRECTION=-1 alloca.c

listing:
	pr $(FILES) | lpr $(LPRFLAGS)

#lint:
#	lint $(CFILES)

clean:
	rm -f *.o

bison: $(OBJECTS)
	$(LD) -s10000 -o bison $(LIB)/cstart.o $(OBJECTS)

install: bison hairy.bis simple.bis
	cp hairy.bis simple.bis $(LOCALDIR)/lib/bison
	cp bison $(LOCALDIR)/bin
