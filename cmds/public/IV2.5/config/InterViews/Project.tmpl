/**/#
/**/# Project.tmpl - project-specific configuration file
/**/#

/*
 * You can build InterViews for X10 instead of X11.
 */

#ifndef WindowSystem
#define WindowSystem X11
#endif

/*
 * You can put .o files among .c files instead of in MachineDep
 * subdirectories.
 */

#ifndef CompileInMachineDepSubdir
#define CompileInMachineDepSubdir YES
#endif

/*
 * You can install executables with symbol tables instead of stripping
 * the executables while installing them.
 */

#ifndef StripProgram
#define StripProgram YES
#endif
#ifndef InstPgmFlags
#if StripProgram
#define InstPgmFlags -s
#else
#define InstPgmFlags /* as nothing */
#endif
#endif

/*
 * You can keep both uninstalled and installed executables instead of
 * removing uninstalled executables after installing them.  MachineDep
 * subdirectories allow us to store .o files for multiple architectures
 * so we use RemoveAfterInstall rather than "make clean" to save space.
 */

#ifndef RemoveAfterInstall
#define RemoveAfterInstall YES
#endif
#ifndef AfterInstallCmd
#if RemoveAfterInstall
#define AfterInstallCmd $(RM)
#else
#define AfterInstallCmd /bin/true
#endif
#endif

/*
 * You can install the platform .cf files from ./config if you don't
 * already have any in /usr/lib/X11/config.
 */

#ifndef InstallPlatformCfFiles
#define InstallPlatformCfFiles NO
#endif

/*
 * You can invoke a different C++ compiler driver than the one we use.
 */

#ifndef CplusplusCcCmd
#define CplusplusCcCmd CC
#endif
#ifndef CplusplusLdCmd
#define CplusplusLdCmd CplusplusCcCmd
#endif

/*
 * You can change the flags to pass to makedepend if your C++ compiler
 * driver silently passes extra flags to cpp.
 */

#ifndef DependCFlags
#define DependCFlags $(CFLAGS) -I/usr/include/CC
#endif

/*
 * We use GenDir to tell the Makefile that generates the .o files
 * where to look for the automatically generated C and C++ files.
 */

#ifndef GenDir
#if CompileInMachineDepSubdir && defined(InMachineDepSubdir)
#define GenDir ../Generated
#else
#define GenDir Generated
#endif
#endif

/*
 * We use SrcDir to tell the Makefile that generates the .o files
 * where to look for the source C and C++ files.
 */

#ifndef SrcDir
#if CompileInMachineDepSubdir && defined(InMachineDepSubdir)
#define SrcDir ..
#else
#define SrcDir .
#endif
#endif

/*
 * You can install InterViews directly into your system area if you don't
 * want to play with InterViews entirely in place and possibly "install"
 * it by creating symbolic links from your system area to InterViews.
 */

#ifndef InstallRelative
#ifdef UseInstalled
/* exception: relative install impossible outside of source tree */
#define InstallRelative NO
#else
/* always install relative to $(TOP) when inside source tree */
#define InstallRelative YES
#endif
#endif

/*
 * We use BinDir, etc., to tell the Makefiles where to install things
 * in our system area.  We use RelativeBinDir, etc., to tell the
 * Makefiles where to install things under $(TOP) if we want to play
 * with InterViews entirely in place.
 */

#ifndef DestDir
#define DestDir /* as nothing */
#endif

#ifndef BinDir
#define BinDir $(DESTDIR)/usr/bin/WindowSystem
#endif
#ifndef RelativeBinDir
#define RelativeBinDir $(TOP)/bin/$$CPU.$X
#endif

#ifndef LocalBinDir
#define LocalBinDir $(DESTDIR)/usr/local/bin/
#endif
#ifndef RelativeLocalBinDir
#define RelativeLocalBinDir $(TOP)/bin/$$CPU
#endif

#ifndef IncRoot
#define IncRoot $(DESTDIR)/usr/include
#endif
#ifndef RelativeIncRoot
#define RelativeIncRoot $(TOP)/include
#endif

#ifndef UsrLibDir
#define UsrLibDir $(DESTDIR)/usr/lib
#endif
#ifndef RelativeUsrLibDir
#define RelativeUsrLibDir $(TOP)/lib/$$CPU
#endif

/*
 * We use these definitions to tell the Makefiles where to install
 * config files and man pages (there is no purpose in installing them
 * under $(TOP) so we always install directly into the system area).
 */

#ifndef LibDir
#define LibDir UsrLibDir/WindowSystem
#endif
#ifndef ConfigDir
#define ConfigDir $(LIBDIR)/config
#endif
#ifndef IVConfigDir
#define IVConfigDir $(CONFIGDIR)/InterViews
#endif
#ifndef ManDirectoryRoot
#define ManDirectoryRoot /usr/man	/* if not set in .cf */
#endif
#ifndef ManPath
#define ManPath $(DESTDIR)/**/ManDirectoryRoot
#endif
#ifndef ManSourcePath
#define ManSourcePath $(MANPATH)/man
#endif
#ifndef ManSuffix
#define ManSuffix	n		/* use just one tab or cpp will die */
#endif
#ifndef LibManSuffix
#define LibManSuffix	n		/* use just one tab or cpp will die */
#endif
#ifndef ManDir
#define ManDir $(MANSOURCEPATH)/**/ManSuffix
#endif
#ifndef LibmanDir
#define LibmanDir $(MANSOURCEPATH)/**/LibManSuffix
#endif

/*
 * Directories to be created when make install is executed.
 */

          DESTDIR = DestDir		/* root of install */
#if InstallRelative
        USRLIBDIR = RelativeUsrLibDir	/* IV libraries */
           BINDIR = RelativeBinDir	/* IV's WS clients */
      LOCALBINDIR = RelativeLocalBinDir	/* WS-independent IV programs */
          INCROOT = RelativeIncRoot	/* base of where to put header files */
#else
        USRLIBDIR = UsrLibDir		/* IV libraries */
           BINDIR = BinDir		/* IV's WS clients */
      LOCALBINDIR = LocalBinDir		/* WS-independent IV programs */
          INCROOT = IncRoot		/* base of where to put header files */
#endif
           INCDIR = $(INCROOT)/InterViews /* must end in InterViews */
     TEMPLATESDIR = $(INCDIR)/Templates	/* templates for genclass */
           LIBDIR = LibDir		/* rgb, XErrorDB, etc. */
        CONFIGDIR = ConfigDir		/* WS build configuration info */
      IVCONFIGDIR = IVConfigDir		/* IV build configuration info */
          MANPATH = ManPath		/* top of manual page tree */
    MANSOURCEPATH = ManSourcePath	/* prefix for man page sources */
           MANDIR = ManDir		/* man pages for commands */
        LIBMANDIR = LibmanDir		/* man pages for library routines */

/*
 * Directories to be compiled when make World is executed.
 */

        CONFIGSRC = $(TOP)/config
      IVCONFIGSRC = $(CONFIGSRC)/InterViews
            IVSRC = $(TOP)/src
       INCLUDESRC = $(IVSRC)/InterViews
     TEMPLATESSRC = $(INCLUDESRC)/Templates
           BINSRC = $(IVSRC)/bin
         IMAKESRC = $(BINSRC)/imake
        SCRIPTSRC = $(BINSRC)/scripts
 LIBINTERVIEWSSRC = $(IVSRC)/libInterViews
    LIBGRAPHICSRC = $(IVSRC)/libgraphic
       LIBTEXTSRC = $(IVSRC)/libtext
           MANSRC = $(TOP)/man

/*
 * Configuration make variables.
 */

        IMAKETMPL = IMAKE_TEMPLATE
#ifdef UseInstalled
        IMAKEOPTS = -T $(IMAKETMPL) -I$(IVCONFIGDIR) -I$(CONFIGDIR) \
		    -DUseInstalled
#else
        IMAKEOPTS = -T $(IMAKETMPL) -I$(IVCONFIGSRC) -I$(CONFIGSRC)
#endif

/*
 * Build make variables.
 */

               CC = CplusplusCcCmd
               LD = CplusplusLdCmd
     DEPENDCFLAGS = DependCFlags
     INSTPGMFLAGS = InstPgmFlags
     AFTERINSTALL = AfterInstallCmd

#ifdef UseInstalled
         INCLUDES = -I$(SRC) -I$(GEN) -I$(INCDIR)/Std
        TEMPLATES = $(TEMPLATESDIR)
    LIBINTERVIEWS = $(USRLIBDIR)/libInterViews$X.a
       LIBGRAPHIC = $(USRLIBDIR)/libgraphic.a
          LIBTEXT = $(USRLIBDIR)/libtext.a
#else
         INCLUDES = -I$(SRC) -I$(GEN) -I$(IVSRC) -I$(INCLUDESRC)/Std
        TEMPLATES = $(TEMPLATESSRC)
#if CompileInMachineDepSubdir
    LIBINTERVIEWS = $(LIBINTERVIEWSSRC)/$M/libInterViews$X.a
       LIBGRAPHIC = $(LIBGRAPHICSRC)/$M/libgraphic.a
          LIBTEXT = $(LIBTEXTSRC)/$M/libtext.a
#else
    LIBINTERVIEWS = $(LIBINTERVIEWSSRC)/libInterViews$X.a
       LIBGRAPHIC = $(LIBGRAPHICSRC)/libgraphic.a
          LIBTEXT = $(LIBTEXTSRC)/libtext.a
#endif
#endif
             AOUT = a.out	/* to prevent ambiguity with installed pgms */
              SRC = SrcDir
              GEN = GenDir
                M = MachineDep
                X = WindowSystem
