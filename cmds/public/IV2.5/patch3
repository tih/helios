From linton@interviews.Stanford.EDU Mon Jun 26 20:58:37 1989
Return-Path: <linton@interviews.Stanford.EDU>
Received: from interviews.Stanford.EDU by Control.LTH.Se (3.2/Regler-1 ); Mon, 26 Jun 89 20:58:23 +0200 (MET)
Received: by interviews.Stanford.EDU (5.57/Ultrix2.4-C)
	id AA08363; Mon, 26 Jun 89 10:41:54 PDT
Date: Mon, 26 Jun 89 10:41:54 PDT
From: linton@interviews.stanford.edu (Mark Linton)
Message-Id: <8906261741.AA08363@interviews.Stanford.EDU>
To: regler@control.lth.se
Subject: Re:  GetCursor/SetCursor -- bug or feature
Cc: interviews@interviews.Stanford.EDU
Status: R

>I do not understand the asymmetric behaviour of GetCursor/SetCursor; I would
>prefer SetCursor(nil) to mean ``use parent's cursor again.''  Comments,
>please.  (I use InterViews 2.5 on a Sun-3, compiled with AT&T 1.2.1)

I agree, it's a bug.  The fix is to put the nil check in
Interactor::DoSetCursor in X11.c.  Below is the patch.

	Mark


--

Apply with ``cd iv; patch -p -N < diffs'' to patch files:

	src/InterViews/Text/terminal.h
	src/libtext/terminal.c

*** /tmp/,RCSt1a08357	Mon Jun 26 10:40:22 1989
--- src/libInterViews/X11.c	Mon Jun 26 10:09:49 1989
***************
*** 2336,2342 ****
  }
  
  void Interactor::DoSetCursor (Cursor* c) {
!     XDefineCursor(_world->display(), (Window)canvas->id, (XCursor)c->Id());
      Flush();
  }
  
--- 2336,2346 ----
  }
  
  void Interactor::DoSetCursor (Cursor* c) {
!     if (c == nil) {
! 	XUndefineCursor(_world->display(), (Window)canvas->id);
!     } else {
! 	XDefineCursor(_world->display(), (Window)canvas->id, (XCursor)c->Id());
!     }
      Flush();
  }
  

