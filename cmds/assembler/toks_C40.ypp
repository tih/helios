/*
 * File:	toks_C40.c
 * Subsystem:	Generic (C40) Assembler
 * Author:	P.A.Beskeen
 * Date:	Aug '91
 *
 * Description: Defines the tokens expected by the TMS320C40 specific parts of
 *		the parser.
 *
 *
 * RcsId: $Id: toks_C40.ypp,v 1.4 1992/11/09 17:28:34 craig Exp $
 *
 * (C) Copyright 1991 Perihelion Software Ltd.
 * 
 * $RcsLog$
 *
 */


/* ******************************************************************** */
/* 'C40 Parser Specific C Declarations 					*/
%{
#	include "ghof.h"	/* get values for 'C40 specific patches */

	/* Current instruction we are parsing */
	Instruction	*CurInstr = NULL;
%}



/* ******************************************************************** */
/* 'C40 Specific Mnemonic Tokens					*/


/* LOAD AND STORES */
/* =============== */

%token	<mnem>	LDA LDE LDEP LDF LDHI LDI LDM LDP LDPE LDPK STF STI STIK

%token	<mnem>	LBb	/* LB0 LB1 LB2 LB3 */

%token	<mnem>	LBUb 	/* LBU0 LBU1 LBU2 LBU3 */

%token	<mnem>	LDFcond
		/* LDFU LDFLO LDFLS LDFHI LDFHS LDFEQ LDFNE LDFL LDFLE LDFGT */
		/* LDFGE LDFEQ LDFNE LDFZ LDFNZ LDFP LDFN LDFNN LDFNV LDFV */
		/* LDFNUF LDFUF LDFNC LDFC LDFNLV LDFLV LDFNLUF LDFLUF LDFZUF */

%token	<mnem>	LDIcond
		/* LDIU LDILO LDILS LDIHI LDIHS LDIEQ LDINE LDIL LDILE LDIGT */
		/* LDIGE LDIEQ LDINE LDIZ LDINZ LDIP LDIN LDINN LDINV LDIV */
		/* LDINUF LDIUF LDINC LDIC LDINLV LDILV LDINLUF LDILUF LDIZUF */

%token	<mnem>	LHw	/* LH0 LH1 */
%token	<mnem>	LHUw	/* LHU0 LHU1 */

%token	<mnem>	LWLct	/* LWL0 LWL1 LWL2 LWL3 */
%token	<mnem>	LWRct	/* LWR0 LWR1 LWR2 LWR3 */


/* DIADIC INSTRUCTIONS */
/* =================== */

%token	<mnem>	ABSF ABSI ADDC ADDF ADDI AND ANDN ASH CMPF CMPI FIX FLOAT
%token	<mnem>	FRIEEE LSH MPYF MPYI MPYSHI MPYUHI NEGB NEGF
%token	<mnem>	NEGI NORM NOT OR RCPF RND ROL ROLC ROR RORC RSQRF SUBB
%token	<mnem>	SUBC SUBF SUBI SUBRB SUBRF SUBRI TOIEEE TSTB XOR

%token	<mnem>	MBct	/* MB0 MB1 MB2 MB3 */

%token	<mnem>	MHct	/* MH0 MH1 MH2 MH3 */


/* TRIADIC INSTRUCTIONS */
/* ==================== */

%token	<mnem>	ADDC3 ADDF3 ADDI3 AND3 ANDN3 ASH3 CMPF3 CMPI3 LSH3 MPYF3 MPYI3
%token	<mnem>	MPYSHI3 MPYUHI3 OR3 SUBB3 SUBF3 SUBI3 TSTB3 XOR3


/* PROGRAM CONTROL */
/* =============== */

%token	<mnem>	BR BRD CALL LAJ RPTB RPTBD RPTS 

%token	<mnem>	Bcond
		/* B BU BLO BLS BHI BHS BEQ BNE BL BLE BGT BGE BZ BNZ BP BN */
		/* BNN BNV BV BNUF BUF BNC BC BNLV BLV BNLUF BLUF BZUF */

%token	<mnem>	BcondAF
		/* BUAF BLOAF BLSAF BHIAF BHSAF BEQAF BNEAF BLAF BLEAF BGTAF */
		/* BGEAF BZAF BNZAF BPAF BNAF BNNAF BNVAF BVAF BNUFAF BUFAF */
		/* BNCAF BCAF BNLVAF BLVAF BNLUFAF BLUFAF BZUFAF */

%token	<mnem>	BcondAT
		/* BUAT BLOAT BLSAT BHIAT BHSAT BEQAT BNEAT BLAT BLEAT BGTAT */
		/* BGEAT BZAT BNZAT BPAT BNAT BNNAT BNVAT BVAT BNUFAT BUFAT */
		/* BNCAT BCAT BNLVAT BLVAT BNLUFAT BLUFAT BZUF */

%token	<mnem>	BcondD
		/* BUD BLOD BLSD BHID BHSD BEQD BNED BLD BLED BGTD BGED BZD */
		/* BNZD BPD BND BNND BNVD BVD BNUFD BUFD BNCD BCD BNLVD BLVD */
		/* BNLUFD BLUFD BZUF */

%token	<mnem>	CALLcond
		/* CALLU CALLLO CALLLS CALLHI CALLHS CALLEQ CALLNE CALLL */
		/* CALLLE CALLGT CALLGE CALLZ CALLNZ CALLP CALLN CALLNN */
		/* CALLNV CALLV CALLNUF CALLUF CALLNC CALLC CALLNLV CALLLV */
		/* CALLNLUF CALLLUF CALLZUF */

%token	<mnem>	DBcond
		/* DBU DBLO DBLS DBHI DBHS DBEQ DBNE DBL DBLE DBGT DBGE */
		/* DBZ DBNZ DBP DBN DBNN DBNV DBV DBNUF DBUF DBNC DBC DBNLV */
		/* DBLV DBNLUF DBLUF DBZUF */

%token	<mnem>	DBcondD
		/* DBUD DBLOD DBLSD DBHID DBHSD DBEQD DBNED DBLD DBLED DBGTD */
		/* DBGED DBZD DBNZD DBPD DBND DBNND DBNVD DBVD DBNUFD DBUFD */
		/* DBNCD DBCD DBNLVD DBLVD DBNLUFD DBLUFD DBZUF */

%token	<mnem>	LAJcond
		/* LAJU LAJLO LAJLS LAJHI LAJHS LAJEQ LAJNE LAJL LAJLE LAJGT */
		/* LAJGE LAJZ LAJNZ LAJP LAJN LAJNN LAJNV LAJV LAJNUF LAJUF */
		/* LAJNC LAJC LAJNLV LAJLV LAJNLUF LAJLUF LAJZUF */

%token	<mnem>	LATcond
		/* LATU LATLO LATLS LATHI LATHS LATEQ LATNE LATL LATLE LATGT */
		/* LATGE LATZ LATNZ LATP LATN LATNN LATNV LATV LATNUF LATUF */
		/* LATNC LATC LATNLV LATLV LATNLUF LATLUF LATZUF */

%token	<mnem>	RETIcond
	 	/* RETIU RETILO RETILS RETIHI RETIHS RETIEQ RETINE RETIL */
		/* RETILE RETIGT RETIGE RETIZ RETINZ RETIP RETIN RETINN */
		/* RETINV RETIV RETINUF RETIUF RETINC RETIC RETINLV RETILV */
		/* RETINLUF RETILUF RETIZUF */

%token	<mnem>	RETIcondD
		/* RETIUD RETILOD RETILSD RETIHID RETIHSD RETIEQD RETINED */
		/* RETILD RETILED RETIGTD RETIGED RETIZD RETINZD RETIPD */
		/* RETIND RETINND RETINVD RETIVD RETINUFD RETIUFD RETINCD */
		/* RETICD RETINLVD RETILVD RETINLUFD RETILUFD RETIZUFD */

%token	<mnem>	RETScond
	 	/* RETSU RETSLO RETSLS RETSHI RETSHS RETSEQ RETSNE RETSL */
		/* RETSLE RETSGT RETSGE RETSZ RETSNZ RETSP RETSN RETSNN */
		/* RETSNV RETSV RETSNUF RETSUF RETSNC RETSC RETSNLV RETSLV */
		/* RETSNLUF RETSLUF RETSZUF */

%token	<mnem>	TRAPcond
		/* TRAPU TRAPLO TRAPLS TRAPHI TRAPHS TRAPEQ TRAPNE TRAPL */
		/* TRAPLE TRAPGT TRAPGE TRAPZ TRAPNZ TRAPP TRAPN TRAPNN */
		/* TRAPNV TRAPV TRAPNUF TRAPUF TRAPNC TRAPC TRAPNLV TRAPLV */
		/* TRAPNLUF TRAPLUF TRAPZUF */


/* INTERLOCK INSTRUCTIONS */
/* ====================== */

%token	<mnem>	LDFI LDII SIGI STFI STII


/* STACK INSTRUCTIONS */
/* ================== */

%token	<mnem>	POPF POP PUSH PUSHF 

/* MISC INSTRUCTIONS */
/* ================= */

%token	<mnem>	IDLE SWI NOP IACK



/* PARALLEL INSTRUCTIONS */
/* ===================== */

/* use standard tokens defined for diadic and triadic instructions */

/*
		ABSF || STF,	ABSI || STI,	ADDF3 || STF,	ADDI3 || STI
		AND3 || STI,	ASH3 || STI,	FIX || STI,	FLOAT || STF
		FRIEEE || STF,	LDF || STF,	LDI || STI,	LSH3 || STI
		MPYF3 || STF,	MPYI3 || STI,	NEGF || STF,	NEGI || STI
		NOT3 || STI,	OR3 || STI,	SUBF3 || STF,	TOIEEE || STF
		SUBI3 || STI,	XOR3 || STI,	LDF || LDF,	LDI || LDI
		MPYF3 || ADDF3,	MPYF3 || SUBF3,	MPYF3 || ADDI3,	MPYF3 || SUBI3
*/


/* ******************************************************************** */
/* C40 Specific Types							*/
/* ******************************************************************** */

%token	<flt>	C40FLOAT


/* ******************************************************************** */
/* C40 specific linker instruction patch tokens				*/
/* ******************************************************************** */

%token	<num>	PATCHC40DATAMODULE1 PATCHC40DATAMODULE2 PATCHC40DATAMODULE3
%token	<num>	PATCHC40DATAMODULE4 PATCHC40DATAMODULE5
%token	<num>	PATCHC40MASK24ADD PATCHC40MASK16ADD PATCHC40MASK8ADD


/* @@@ Maybe add: bitwise OR in to immediate data area (5 bit)  */
/* @@ maybe adjust labelref patches depending on delayed bit -1/-3 + pcrel */


/* ******************************************************************** */
/* C40 Register Tokens							*/
/* ******************************************************************** */

%token	<num>	R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11
%token	<num>	AR0 AR1 AR2 AR3 AR4 AR5 AR6 AR7
%token	<num>	DP IR0 IR1 BK SP ST DIE IIE IIF RS RE RC

%token	<num>	IVTP TVTP

%type	<num>	reg Dreg Dreg0_1 Dreg2_3 Dreg0_7 Areg Addr_reg Exp_reg


/* ******************************************************************** */
/* Misc C40 Tokens							*/
/* ******************************************************************** */

%token		BARBAR



/* ******************************************************************** */
/* Internal rule return types						*/
/* ******************************************************************** */

%type	<num>	indirect prefix postfix displacement
%type	<expr>	direct immediate pcrel
%type	<num>	fp_immediate /* 16 bit C40 float representation */
%type	<num>	int_ld_Addr_reg_modes st_addr_modes
%type	<num>	int_unary_op_mode fp_unary_op_mode
%type	<num>	int_diadic_modes fp_diadic_modes float_diadic_modes
%type	<num>	int_triadic_modes fp_triadic_modes
%type	<num>	dia_par_sti_mode tri_par_sti_mode shift_tri_par_sti_mode
%type	<num>	dia_par_stf_mode tri_par_stf_mode shift_tri_par_stf_mode	
%type	<num>	par_mpyi_mode par_mpyf_mode
%type	<num>	rev_par_mpyi_mode rev_par_mpyf_mode
%type	<num>	par_mpyf_op2 par_mpyi_op2

%type	<mnem>	mpyi2_3 mpyf2_3 fp_loads part_loads interlocked_loads genstores
%type	<mnem>	tri_swap_par_sti dia_swap_par_sti shift_swap_par_sti
%type	<mnem>	tri_swap_par_stf dia_swap_par_stf shift_swap_par_stf
%type	<mnem>	bigbranch_ops condbranch fp_unary_only_ops int_diadic_only_ops
%type	<mnem>	int_triadic_only_ops int_both_2_3_ops int_par_st_unary_ops
%type	<mnem>	fp_par_st_unary_ops int_par_st_3_ops shift_par_st_3_ops
%type	<mnem>	int_par_st_2_3_ops shift_par_st_2_3_ops
%type	<mnem>	rotate_ops recip_ops cmpi_ops cmpi3_ops
%type	<mnem>	ret_ops trap_ops rptb_ops

%type	<num>	c40patches


/* ******************************************************************** */
/* toks_C40.ypp */

