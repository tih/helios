; generated by Norcroft Helios C40 C 350/350/stl/2/tla [Jun 18 1992, 09:44:04]
	align
	module  -1
.ModStart:
	word    0x60f160f1
	word    (.ModEnd - .ModStart) * 4
	blkb    32,"setjmp.c"
	word    modnum
	word    1
	word    datasymb ( .MaxData )
	init
	word    codesymb ( .MaxCodeP )
;
;
;        align 128
.__codeseg:
;
;
 word	0x66756e63
 word	0x00000000
 word	0xff000008
;
;
;        align 128
.func:
 SUBI3	3  , AR6, RS 
 CMPI	RS , IR1
 Blt	L9F3
 LDI	R11, RC 
 LAJ	.__stack_overflow
 LDIu	3  , RE 
 LDIu	0  , RS 
 NOP
L9F3:
 STI	R11, *--AR6(1)
 STI	BK , *--AR6(1)
 STI	DP , *--AR6(1)
 LDA	R0 , DP 
 LDA	AR4, AR3
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR3 )
 LDI	*AR3, R0 
 LSH3	-2 , R0 , AR2
 ADDI	41 , AR2
 LDI	*++AR2(IR0), R1 
 SUBI	1  , R1 
 BeqD	L4F3
 STI	R1 , *AR2
 NOP
 NOP
 LDA	AR4, AR1
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR1 )
 LDA	*AR1, BK 
 LDI	BK , R1 
 LDA	AR4, AR0
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR0 )
 LAJ	.IOdebug
 LDI	*AR0, R0 
 ADDI	168, R0 
 LDIu	4  , R2 
 LAJ	.longjmp
 LDI	BK , R0 
 LDIu	4  , R1 
 NOP
 LDA	AR4, AR2
 LAJ	.IOdebug
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR2 )
 LDI	*AR2, R0 
 ADDI	196, R0 
L4F3:
 ADDI3	1  , DP , R0 
 BRD	.func
 LDI	*AR6++(1), DP 
 LDI	*AR6++(1), BK 
 LDI	*AR6++(1), R11
;
;
 word	0x6d61696e
 word	0x00000000
 word	0xff000008
;
;
;        align 128
.main:
 SUBI3	4  , AR6, RS 
 CMPI	RS , IR1
 Blt	L9F5
 LDI	R11, RC 
 LAJ	.__stack_overflow
 LDIu	4  , RE 
 LDIu	0  , RS 
 NOP
L9F5:
 STI	R11, *--AR6(1)
 STI	BK , *--AR6(1)
 STI	DP , *--AR6(1)
 LDA	AR4, AR3
 LAJ	.setjmp
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR3 )
 LDA	*AR3, DP 
 LDI	DP , R0 
 LDA	R0 , BK 
 LDI	R0 , R2 
 LDI	DP , R1 
 LDA	AR4, AR2
 LAJ	.IOdebug
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR2 )
 LDI	*AR2, R0 
 ADDI	204, R0 
 CMPI	0  , BK 
 BneD	L8F5
 LDIne	3  , R0 
 NOP
 NOP
L5F5:
 LAJ	.func
 LDIu	1  , R0 
 NOP
 NOP
L8F5:
 LDI	*+AR6(2), R11
 BuD	R11
 LDI	*AR6++(1), DP 
 LDI	*AR6++(2), BK 
 NOP
;
; Function Stubs
;
;
;        align 128
.setjmp:
patchinstr( PATCHC40DATAMODULE1, shift( -2, DATAMODULE ( _setjmp ) ),
 LDA	AR4, AR5 )
patchinstr( PATCHC40DATAMODULE2, shift ( -2, CODESYMB ( _setjmp ) ),
 ADDI	1  , AR5 )
patchinstr( PATCHC40DATAMODULE3, MODNUM,
 LDI	*AR5, AR5 )
patchinstr( PATCHC40DATAMODULE4, MODNUM,
 ADDI	0  , AR5 )
patchinstr( PATCHC40DATAMODULE5, MODNUM,
 LDI	*AR5, AR5 )
 Bu	AR5
;
;
;        align 128
.longjmp:
patchinstr( PATCHC40DATAMODULE1, shift( -2, DATAMODULE ( _longjmp ) ),
 LDA	AR4, AR5 )
patchinstr( PATCHC40DATAMODULE2, shift ( -2, CODESYMB ( _longjmp ) ),
 ADDI	1  , AR5 )
patchinstr( PATCHC40DATAMODULE3, MODNUM,
 LDI	*AR5, AR5 )
patchinstr( PATCHC40DATAMODULE4, MODNUM,
 ADDI	0  , AR5 )
patchinstr( PATCHC40DATAMODULE5, MODNUM,
 LDI	*AR5, AR5 )
 Bu	AR5
;
;
;        align 128
.IOdebug:
patchinstr( PATCHC40DATAMODULE1, shift( -2, DATAMODULE ( _IOdebug ) ),
 LDA	AR4, AR5 )
patchinstr( PATCHC40DATAMODULE2, shift ( -2, CODESYMB ( _IOdebug ) ),
 ADDI	1  , AR5 )
patchinstr( PATCHC40DATAMODULE3, MODNUM,
 LDI	*AR5, AR5 )
patchinstr( PATCHC40DATAMODULE4, MODNUM,
 ADDI	0  , AR5 )
patchinstr( PATCHC40DATAMODULE5, MODNUM,
 LDI	*AR5, AR5 )
 Bu	AR5
;
;
;        align 128
.__stack_overflow:
patchinstr( PATCHC40DATAMODULE1, shift( -2, DATAMODULE ( ___stack_overflow ) ),
 LDA	AR4, AR5 )
patchinstr( PATCHC40DATAMODULE2, shift ( -2, CODESYMB ( ___stack_overflow ) ),
 ADDI	1  , AR5 )
patchinstr( PATCHC40DATAMODULE3, MODNUM,
 LDI	*AR5, AR5 )
patchinstr( PATCHC40DATAMODULE4, MODNUM,
 ADDI	0  , AR5 )
patchinstr( PATCHC40DATAMODULE5, MODNUM,
 LDI	*AR5, AR5 )
 Bu	AR5
;
; Data / Function Table Initialisation
        align 128
        init
;
;
 CMPI	1  , R0 
 Blt	L2F10
 Beq	R11
 LDA	R11, AR2
 LAJ	4	; <fetching PC>
 NOP
 LDA	AR4, AR5
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	1  , AR5 )
 LDA	*AR5, AR5
 LDA	R11, AR0
 LDI	AR2, R11
 LDIu	.func, RS 	; value = +121,.func
 SUBI3	RS , AR0, RS 
 STI	RS , *AR5++(1)
 BuD	R11
 LDIu	.main, RS 	; value = +71,.main
 SUBI3	RS , AR0, RS 
 STI	RS , *AR5++(1)
L2F10:
 LDA	AR4, AR5
patchinstr( PATCHC40MASK16ADD, shift ( 1, MODNUM ),
 ADDI	0  , AR5 )
 LDA	*AR5, AR5
 LSH	-2 , AR5
 ADDI	IR0, AR5
 LDA	R11, AR2
 LAJ	4	; <fetching PC>
 LDI	17 , AR0
 ADDI	41 , AR5
 LDIu	5  , RC 
 ADDI	R11, AR0
 LDI	AR2, R11
 RPTBD	L4F10
 LDI	*AR0++(1), R1 
 NOP
 NOP
L4F10:
 LDI	*AR0++(1), R1   || STI	R1 , *AR5++(1)
 LDIu	5  , RC 
 RPTBD	L5F10
 STI	R1 , *AR5++(2)
 LDI	*AR0++(1), R1 
 NOP
L5F10:
 LDI	*AR0++(1), R1   || STI	R1 , *AR5++(1)
 BuD	R11
 STI	R1 , *AR5++(1)
 NOP
 NOP
L3F10:
 word	0x0000000a
 word	0x756f6261
 word	0x6f742074
 word	0x6e6f6c20
 word	0x706d6a67
 word	0x2c612528
 word	0x29642520
 word	0x656b6959
 word	0x00002173
 word	0x6a746553
 word	0x2528706d
 word	0x72202961
 word	0x25207465
 word	0x00000078
;
data   __dataseg, 0
data	buf, 224
export buf
;
codetable _func
export    _func

codetable _main
export    _main
;
;
	data      .MaxData, 0
	codetable .MaxCodeP
;
.ModEnd:
; END
