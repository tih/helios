/*------------------------------------------------------------*/
/*                                        dpDrawStrokes(...)  */
/*------------------------------------------------------------*/

/* This routine is used to flatten the odd or even strokes of   */
/*   a line segment. The relevant information is passed to and  */
/*   from this routine in the structure <*li>. The line to be   */
/*   drawn is passed as parameters which are in sub-pixel unit  */
/*   co-ordinates.                                              */
/* The routine returns zero if there was a problem allocating   */
/*   memory, in which case li->polyVector will point 1 past the */
/*   last polygon for which memory was sucessfully allocated    */

int dpDrawStrokes ( int x1, int y1,
                    int x2, int y2,
                    LineControl_t *li
                  )
{  int lf,l,ld,le,al,dx,dy;
   DpSubPixel_t *pnts;

   dx = x2-x1; 
   dy = y2-y1;
   lf = dpVectorLength(dx,dy); 
   dx = dpUnitComponent(dx,l);
   dy = dpUnitComponent(dy,l);
   l  = dpDecodeLength(l);
   ld = li->strokeLength;
   for(al=0;al<l;al+=nl)
   {  le = al+ld;
      if(le>l) le=l;
      /* Now to create the stroke: */
      if(isDrawStroke)
      {  pnts = calloc(4,sizeof(DpSubPixel_t));
