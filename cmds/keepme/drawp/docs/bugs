Drawp graphics package bug report
=================================

Date			: Sat Feb 24 16:34:53 GMT 1990
drawpTest version	: Release 0.0.16
drawp version		: Release 0.1.25

test program		: drawpTest/out/testClip3

drawp routine found 
to be faulty		: dpDrawLine



Explanation of bug found

When a line is drawn through the square clip region at the centre of the 
screen passing from top left corner through bottom right corner, and
this is then overdrawn in XOR mode first by a line with opposite clipping
and then with no clipping, a single pixel is left behind.

Drawp graphics package bug report
=================================

Date			: Tue Feb 27 14:40:01 GMT 1990
drawpTest version	: Release 0.0.17
drawp version		: Release 0.1.25

test program		: drawpTest/out/copyArea

drawp routine found 
to be faulty		: dpCopyArea



Explanation of bug found

I've modified my test programs so that the -p option, which tests multiple 
bit planes, can take an argument which specifies which plane will be made
visible (if this arg. is p, the planemask is set to 1<<p).

So, try "copyArea -p -w" to remind yourself of how this test goes, then try
"copyArea -p0 -w" which will set the planemask so that only plane 0 is 
visible. As you will see, you seem to be forgetting to reset an x value when
stepping from one line to the next.

Drawp graphics package bug report
=================================

Date			: Tue Feb 27 17:35:16 GMT 1990
drawpTest version	: Release 0.0.17
drawp version		: Release 0.1.25

test program		: drawpTest/out/fillPolyBug

drawp routine found 
to be faulty		: dpFillPolygon



Explanation of bug found

Run "fillPolyBug" and you will see that this program draws a filled triangle
whose basline is coincident with the bottom of the screen, continuously 
increasing its height and redrawing; the y value of the top vertex is 
printed out each time. 

You'll see that dpFillPolygon goes wrong when the off-screen coordinates get 
large, drawing a thinner-than-asked for polygon or even a single line. This 
is more easily seen if you run "fillPolyBug -w", which changes the y step
between redrawings of the triangle from 100 to 1 when y is in the range
[-6500, -6600], in addition you must press a key between each redrawing in
this range. The y value at which fillPolygon first goes wrong here is -6532;
between 6532 and 6574 only half of the triangle is drawn, then for y between 6575 and some substantially higher value you get a single line.

Drawp graphics package bug report
=================================

Date			: Mon Apr 30 10:38:29 BST 1990
drawpTest version	: Release 0.0.19
drawp version		: Release 0.1.25

test program		: One of pete's

drawp routine found 
to be faulty		: FillRectangle



Explanation of bug found

FillRectangle with a mask where the mask extends outside the destination
pixmap doesn't work! (Seems to shift coordinates).

This is one of Pete's really.

