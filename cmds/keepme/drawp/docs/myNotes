These are my notes for possible pending changes to the draw package:

1. Divide 'rectangles.s' so that 'functions.s' contains all of what are
     now called the combination routines. Re-structure the control routines:
     Write control routines for drawing a single horizontal line which deal
     with tiling of the source pixmap and make use of the cache in/out
     of various data words. The routines do NOT deal with left/right up/down
     issues. Call these routines 'hlines.s'. Then write routines to deal
     with drawing rectangles in the source pixmap unary/binary/tertiary,
     but do not deal with tiling. They are split into three however,
     the left-right, the right-left, and the up-down. Note that there
     is currently a BUG in the dpCopyArea command since if going right-left/
     going up-down, the clip-nodes have to be scanned in a different way.
     Also, what do you do if there is more than one clip-node ??? Big 
     problems to be thought about here. Note: Stippled/Unstippled need
     only be considered on horizontal lines now, and we combine these
     routines together in such a way as to eliminate the 'source increment'
     concept. Ditto eliminate 'source increment' with block operations and
     so the combine routines need not worry about artificially incrmenting
     the source pointer.
     
2. The double-dash mode of line drawing can potentially draw pixels twice
     if used in the envisaged manner. This could cause problems, but is
     probably a very minor issue.
     
3. Implement the mitered join-style, and fix the join-style technique
    and cap-style technique for rounded ends with very short (in comparisson
    to width), lines. This requires a (gradient->sine) computation 
    capability which can be performed by binary-chop processing on the
    sine look-up table.

4. When the 'rectangles.s' code is changed, rename 'rectPrimitves' to
    'rectangles.s'

5. Have another look at the residue computing code. It could be better. In
    'rectangles.s' at the moment.

6. Please note in all testing and re-testing of the draw package that the
    tests should all be done with small clip-nodes, then recompiled for
    large clip-nodes and re-performed

7. The file 'lineClipping.c' rounds down and uses only pixel accuracy. This
     file should be converted to machine code where high-precision arithmetic
     can be used, and converted to deal with high-precision pixel plotting
     in terms of conducting proper clipping.

8. Neaten up the code in 'gc_decoder.c'. At the moment it is in a fine
      mess. The thing with switching between foreground and background
      plot-modes could have a different function- structure and so be
      made more efficient as well.
