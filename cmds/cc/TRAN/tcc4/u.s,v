head     1.1;
branch   1.1.1;
access   ;
symbols  ncc:1.1.1.1 ncc:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     93.07.21.14.07.19;  author nick;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     93.07.21.14.07.20;  author nick;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@	align
	module	-1
.ModStart:
	word	#60f160f1
	word	.ModEnd-.ModStart
	blkb	31,"u.c" byte 0
	word	modnum
	word	1
	word	.MaxData
	init
-- ida=3
-- fda=3
-- j #0 #652c8 dead
-- infoline #300 #6e538 
-- { cg_cmd()
--  Cg_cmd: <block> line 4 (u.c)
--  ida=3
--  fda=3
--  Cg_bindlist
--  set_VLocal a 1
--  set_VLocal b 2
--  set_VLocal c 3
--  set_VLocal d 4
--  infoline #300 #6e51c 
--  { cg_cmd()
--   Cg_cmd: ; line 8 (u.c)
--   ida=3
--   fda=3
--   { cg_expr1()
--    cg_expr1 : <cast> mode  0 length 0 valneeded 0
--    { cg_cast()
--     Cg_cast: 6e4fc op = mc mode 0 l 0  arg mode 1 l 4
--     { cg_expr1()
--      cg_expr1 : = mode  1 length 4 valneeded 0
--      { cg_scalarAssign()
--       Cg_scalarAssign: 6e4fc valneeded 0
--       { cg_expr1()
--        cg_expr1 : + mode  1 length 4 valneeded 1
--        { cg_binary()
--         cg_binary: + d1=1 d2=3 ida=3 fda=3 m1=1000004 m2 = 1000004 floating=0 fpp=0
--         { cg_expr1()
--          cg_expr1 : <cast> mode  1 length 4 valneeded 1
--          { cg_cast()
--           Cg_cast: 6e4c4 op < mc mode 1 l 4  arg mode 0 l 4
--           { cg_expr1()
--            cg_expr1 : < mode  0 length 4 valneeded 1
--            { cg_binary()
--             cg_binary: > d1=1 d2=1 ida=3 fda=3 m1=1000004 m2 = 1000004 floating=0 fpp=0
--             { cg_expr1()
--              cg_expr1 : <variable> mode  1 length 4 valneeded 1
--              { cg_var()
--               Cg_var: c flag 48 mcmode 1 mclength 4 valneeded 1 ida 3
--               ldvl #314 #760a4 
--               ida(3)--
--              } cg_var
--             } cg_expr1
--             { cg_expr1()
--              cg_expr1 : <cast> mode  1 length 4 valneeded 1
--              { cg_cast()
--               Cg_cast: 7601c op <variable> mc mode 1 l 4  arg mode 0 l 4
--               { cg_expr1()
--                cg_expr1 : <variable> mode  0 length 4 valneeded 1
--                { cg_var()
--                 Cg_var: d flag 48 mcmode 0 mclength 4 valneeded 1 ida 2
--                 ldvl #314 #760c8 
--                 ida(2)--
--                } cg_var
--               } cg_expr1
--              } cg_cast
--             } cg_expr1
--             mint #f #142 
--             xor #f #133 
--             rev #f #100 
--             mint #f #142 
--             xor #f #133 
--             rev #f #100 
--             gt #f #109 
--             ida(1)++
--            } cg_binary
--           } cg_expr1
--          } cg_cast
--         } cg_expr1
--         { cg_expr1()
--          cg_expr1 : <variable> mode  1 length 4 valneeded 1
--          { cg_var()
--           Cg_var: b flag 48 mcmode 1 mclength 4 valneeded 1 ida 2
--           ldvl #314 #76080 
--           ida(2)--
--          } cg_var
--         } cg_expr1
--         add #f #105 
--         ida(1)++
--        } cg_binary
--       } cg_expr1
--       { cg_var()
--        Cg_var: a flag 46 mcmode 1 mclength 4 valneeded 0 ida 2
--        stvl #316 #7605c 
--        ida(2)++
--       } cg_var
--      } cg_scalarAssign
--     } cg_expr1
--     ida=3
--     fda=3
--    } cg_cast
--   } cg_expr1
--   ida=3
--   fda=3
--  } cg_cmd
-- } cg_cmd
-- ldc #4 #0 
-- ret #30a #0 
-- ida=3
-- fda=3
	align
..1: -- 1 refs
	word #60f360f3,.main byte "main",0 align
.main:
	ldl	1
	ldnl	1
	ldlp	-68
	gt
	cj	..2
	ldc	..1-2
	ldpi
	ldl	1
	call	._stack_error
..2: -- 1 refs
	ajw	-4
-- doing block 0(1) alive jump noop pending op INVALID OP lab -1 lab2 -1
-- Line 4 (u.c)
-- Line 8 (u.c)
	ldl	1
	ldl	0
	mint
	xor
	rev
	mint
	xor
	rev
	gt
	ldl	2
	add
	stl	3
	ldc	0
	ajw	4
	ret
-- Stubs
	align
._stack_error:
	ldl	1
	ldnl	0
	ldnl	@@__stack_error
	ldnl	__stack_error
	gcall
-- Data Initialization
	data	..dataseg 0
	global	_main
	data	_main 1
	align
	init
	ajw	-2
	ldl	3
	ldnl	0
	ldnl	modnum
	stl	1
	ldl	1
	ldnlp	..dataseg
	stl	0
	ldl	4
	cj	..4
	j	..5
..4: -- 1 refs
	ldc	.main-2
	ldpi
	ldl	0
	stnl	0
..5: -- 1 refs
	ajw	2
	ret
	data	.MaxData 0
	align
.ModEnd:
@


1.1.1.1
log
@Initial Import of Norcroft C compiler for Transputer.
@
text
@@
