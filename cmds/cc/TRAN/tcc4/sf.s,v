head     1.1;
branch   1.1.1;
access   ;
symbols  ncc:1.1.1.1 ncc:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     93.07.21.14.07.22;  author nick;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     93.07.21.14.07.23;  author nick;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@	align
	module	-1
.ModStart:
	word	#60f160f1
	word	.ModEnd-.ModStart
	blkb	31,"sf.c" byte 0
	word	modnum
	word	1
	word	.MaxData
	init
-- ida=3
-- fda=3
-- ida=3
-- fda=3
-- j #0 #653ac dead
-- infoline #300 #6e590 
-- { cg_cmd()
--  Cg_cmd: <block> line 9 (sf.c)
--  ida=3
--  fda=3
--  Cg_bindlist
--  set_VLocal a 2
--  set_VLocal b 3
--  infoline #300 #6e574 
--  { cg_cmd()
--   Cg_cmd: ; line 16 (sf.c)
--   ida=3
--   fda=3
--   { cg_expr1()
--    cg_expr1 : <cast> mode  0 length 0 valneeded 0
--    { cg_cast()
--     Cg_cast: 6e554 op = mc mode 0 l 0  arg mode 2 l 4
--     { cg_expr1()
--      cg_expr1 : = mode  2 length 4 valneeded 0
--      { cg_scalarAssign()
--       Cg_scalarAssign: 6e554 valneeded 0
--       { cg_expr1()
--        cg_expr1 : / mode  2 length 4 valneeded 1
--        { cg_binary()
--         cg_binary: / d1=1 d2=4 ida=3 fda=3 m1=2000004 m2 = 2000004 floating=1 fpp=10000000
--         { cg_expr1()
--          cg_expr1 : <cast> mode  2 length 4 valneeded 1
--          { cg_cast()
--           Cg_cast: 75fdc op <variable> mc mode 2 l 4  arg mode 0 l 4
--           ldvlp #315 #7606c 
--           ida(3)--
--           fpi32tor32 #f #196 
--           fda(3)--
--           ida(2)++
--          } cg_cast
--         } cg_expr1
--         { cg_expr1()
--          cg_expr1 : <cast> mode  2 length 4 valneeded 1
--          { cg_cast()
--           Cg_cast: 6e508 op . mc mode 2 l 4  arg mode 0 l 2
--           { cg_cast()
--            Cg_cast: 6e508 op . mc mode 0 l 4  arg mode 0 l 2
--            { cg_expr1()
--             cg_expr1 : . mode  0 length 2 valneeded 1
--             { cg_expr1()
--              cg_expr1 : unary * mode  0 length 2 valneeded 1
--              { cg_indirect()
--               Cg_indirect: 6e6b4 + flag 48 mcmode 0 mclength 2
--               valneeded 1 depth 1
--               x1 <variable> x2 <NULL> offset 0 postinc 0
--               { cg_expr1()
--                cg_expr1 : <variable> mode  0 length 4 valneeded 1
--                { cg_var()
--                 Cg_var: f flag 48 mcmode 0 mclength 4 valneeded 1 ida 3
--                 ldvl #314 #76024 
--                 ida(3)--
--                } cg_var
--               } cg_expr1
--               ldc #4 #0 
--               stvl #316 #760b4 
--               ldvlp #315 #760b4 
--               ldc #4 #2 
--               move #f #14a 
--               ldvl #314 #760b4 
--               ida=2
--               ldc #4 #8000 
--               xword #f #13a 
--              } cg_indirect
--             } cg_expr1
--            } cg_expr1
--           } cg_cast
--           stvl #316 #760d0 
--           ida(2)++
--           ldvlp #315 #760d0 
--           ida(3)--
--           fpi32tor32 #f #196 
--           fda(2)--
--           ida(2)++
--          } cg_cast
--         } cg_expr1
--         fpdiv #f #18c 
--         fda(1)++
--        } cg_binary
--       } cg_expr1
--       { cg_var()
--        Cg_var: b flag 46 mcmode 2 mclength 4 valneeded 0 ida 3
--        ldvlp #315 #76090 
--        ida(3)--
--        fpstnlsn #f #188 
--        ida(2)++
--        fda(2)++
--       } cg_var
--      } cg_scalarAssign
--     } cg_expr1
--     ida=3
--     fda=3
--    } cg_cast
--   } cg_expr1
--   ida=3
--   fda=3
--  } cg_cmd
-- } cg_cmd
-- ret #30a #0 
-- ida=3
-- fda=3
	align
..1: -- 1 refs
	word #60f360f3,.foo byte "foo",0 align
.foo:
	ldl	1
	ldnl	1
	ldlp	-68
	gt
	cj	..2
	ldc	..1-2
	ldpi
	ldl	1
	call	._stack_error
..2: -- 1 refs
	ajw	-4
-- doing block 0(1) alive jump noop pending op INVALID OP lab -1 lab2 -1
-- Line 9 (sf.c)
-- Line 16 (sf.c)
	ldlp	2
	fpi32tor32
	ldl	6
	ldc	0
	stl	0
	ldlp	0
	ldc	2
	move
	ldl	0
	ldc	32768
	xword
	stl	0
	ldlp	0
	fpi32tor32
	fpdiv
	ldlp	1
	fpstnlsn
	ajw	4
	ret
-- Stubs
	align
._stack_error:
	ldl	1
	ldnl	0
	ldnl	@@__stack_error
	ldnl	__stack_error
	gcall
-- Data Initialization
	data	..dataseg 0
	global	_foo
	data	_foo 1
	align
	init
	ajw	-2
	ldl	3
	ldnl	0
	ldnl	modnum
	stl	1
	ldl	1
	ldnlp	..dataseg
	stl	0
	ldl	4
	cj	..4
	j	..5
..4: -- 1 refs
	ldc	.foo-2
	ldpi
	ldl	0
	stnl	0
..5: -- 1 refs
	ajw	2
	ret
	data	.MaxData 0
	align
.ModEnd:
@


1.1.1.1
log
@Initial Import of Norcroft C compiler for Transputer.
@
text
@@
