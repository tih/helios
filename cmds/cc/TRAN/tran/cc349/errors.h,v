head     1.1;
branch   1.1.1;
access   ;
symbols  ncc:1.1.1.1 ncc:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     93.07.21.14.07.13;  author nick;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     93.07.21.14.07.14;  author nick;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef __OLD_HELIOS_CC
#pragma force_top_level
#pragma include_only_once
#endif

/*
 * C compiler file errors.h
 * Copyright (C) Codemist Ltd, 1990
 */

#ifndef _errors_LOADED
#define _errors_LOADED 1

typedef char *syserr_message_type;
#pragma -v3 /* format checker */
extern void syserr(syserr_message_type errcode, ...);
#pragma -v0

/*
 * C compiler error prototype file (miperrs.h)
 * Copyright (C) Codemist Ltd, 1988.
 */

/*
 * RCS $Revision: 1.3 $ Codemist 130
 * Checkin $Date: 90/03/15 15:49:15 $
 * Revising $Author: lee $
 */

/*
 * This file is input to the genhdrs utility, which can compress error
 * strings (but leaving escape sequences alone so that format checking can
 * occur) and optionally mapping syserr messages onto numeric codes
 * (in case somebody wants to save the about 4Kbytes of memory involved).
 */

/* AM: (after discussion with LDS) It would seem that error texts below */
/* which (seriously) take 2 or more arguments should be of the form     */
/*    #define ermsg(a,b,c) "ho hum %s had a %s %s", a, b, c             */
/* etc. to allow different sentence order in other (natural) languages. */

/* One nice thing would be to have a variant form of $r (etc) which did */
/* not quote its arg to avoid many uses of symname_() in the code.      */

#ifdef __CC_NORCROFT
  /*
   * The next procedure takes a string as a format... check args.
   */
  #pragma -v3
#endif

/* cc_msg has been left in globals.h since it takes an uncompressed string */
extern void cc_rerr(char *errcode, ...);
extern void cc_ansi_rerr(char *errcode, ...);
extern void cc_warn(char *errcode, ...);
extern void cc_ansi_warn(char *errcode, ...);
extern void cc_pccwarn(char *errcode, ...);
extern void cc_err(char *errcode, ...);
extern void cc_fatalerr(char *errcode, ...);

#ifdef __CC_NORCROFT
  /*
   * End of procedures that take error strings or codes.
   */
  #pragma -v0
#endif


      /* Map strings to offsets in compressed string table */

#define bind_warn_extern_clash \
        "Q\373 \217\100h $r\270$r \217\100h \050ANSI 6 \341\356\007o\272\
e\051"    /* "extern clash $r, $r clash (ANSI 6 char monocase)" */
#define bind_warn_unused_static_decl "\030\226\014e\017li\230Ba\016c \274\
a\201Y$r"    /* "unused earlier static declaration of $r" */
#define bind_warn_not_in_hdr "Q\373 $r \174\274\014\227head\004"    /* "extern $r not declared in header" */
#define bind_warn_main_not_int "Q\373 \'ma\002\035\377\006\015\233\277\374\
\035\256\254"    /* "extern 'main' needs to be 'int' function" */
#define bind_warn_label_not_used "l\252\243 $r w\222\234\014\353\174\226\
\006"    /* "label $r was defined but not used" */
/*
 * Note that when part of an error string MUST be stored as a regular
 * non-compressed string I have to inform the GenHdrs utility with %Z and %O
 * This arises when a string contains literal strings as extra sub-args.
 */
#define bind_warn_not_used(is_typedef,is_fn,binder) \
        "%s $b \274\014\353\174\226\006"    /* "%s $b declared but not used" */, \
      ((is_typedef) ? "typedef" : ((is_fn) ? "function" : "variable")),\
      binder
#define bind_warn_static_not_used "Ba\016c $b \274\014\353\174\226\006"    /* "static $b declared but not used" */
#define cg_warn_implicit_return "i\232\302\253\022t\350n\235n\331\337\202\
%s\050\051"    /* "implicit return in non-void %s()" */
#define flowgraf_warn_implicit_return "i\232\302\253\022t\350n\235n\331\
\337\202\256\254"    /* "implicit return in non-void function" */
#define pp_warn_triglyph \
        "ANSI \'%c%c%c\035tr\207raph \245\'%c\035\327\202\206w\222\324\307\
\2507d\006\077"    /* "ANSI '%c%c%c' trigraph for '%c' found - was this intended?" */
#define pp_warn_nested_comment "\341\212\214\336qu7c\003%s\026\247\376\231\
mm\346"    /* "character sequence %s inside comment" */
#define pp_warn_many_arglines \
        "\050\224s\247b\240\343\011\051K\076\075 %lu \322\361Ym\212r\021\
\316\210\346s"    /* "(possible error): >= %lu lines of macro arguments" */
#define pp_warn_redefinition "\022pe\267\234i\201Y\043\234\003m\212r\021\
%s"    /* "repeated definition of #define macro %s" */
#define pp_rerr_redefinition "diff\004\037r\006ef\002i\201Y\043\234\003\
m\212r\021%s"    /* "differing redefinition of #define macro %s" */
#define pp_rerr_nonunique_formal "d\325\302\034\003m\212r\021\263\200\371\
\020K\'%s\'"    /* "duplicate macro formal parameter: '%s'" */
#define pp_rerr_define_hash_arg "\323\0045\202Y\043 \174m\212r\021\263\200\
\371\020"    /* "operand of # not macro formal parameter" */
#define pp_rerr_define_hashhash "\043\043 \301rs\005\033l\100\005tok7\235\
\043\234\003body"    /* "## first or last token in #define body" */
#define pp_warn_ifvaldef "\043if\023\027%s\356ay\026d\246\034\003tr\204\
bP\340"    /* "#ifdef %s may indicate trouble..." */ /* MACH_EXTNS */
#define pp_warn_nonansi_header "N\331ANSI \043\002\217u\376\074%s\076"    /* "Non-ANSI #include <%s>" */
#define pp_warn_bad_pragma "Un\022\231gn\032\014\043pragm\317\050n\021\'\
-\035\033\030kWwn w\011d\051"    /* "Unrecognised #pragma (no '-' or unknown word)" */
#define pp_warn_bad_pragma1 "Un\022\231gn\032\014\043pragm\317-%c"    /* "Unrecognised #pragma -%c" */
#define pp_warn_unused_macro "\043\234\003m\212r\021\'%s\035\234\014\353\
\174\226\006"    /* "#define macro '%s' defined but not used" */
#define regalloc_warn_use_before_set "$b\356\306\277\226\014\375\236\003\
\375\037\336t"    /* "$b may be used before being set" */
#define regalloc_warn_never_used "$b \307\336\005\353\377v\230\226\006"    /* "$b is set but never used" */
#define sem_warn_unsigned "ANSI s\350pr\032eK\'l\007g\035$s \'\030s\221\
\006\035yi\243d\015\'l\007g\'"    /* "ANSI surprise: 'long' $s 'unsigned' yields 'long'" */
#define sem_warn_format_type "\212tu\013\140\244\003$t\356\032m\034\242\
\361\263\360\'%.\052s\'"    /* "actual type $t mismatches format '%.*s'" */
#define sem_warn_bad_format "Il\215\200\263\360\216\262\247\031\'%%%c\'"    /* "Illegal format conversion '%%%c'" */
#define sem_warn_incomplete_format "In\366Pt\003\263\360Br\002g"    /* "Incomplete format string" */
#define sem_warn_format_nargs "F\011m\360\022qui\022\015%ld \371\020%s\270\
\353%ld giv7"    /* "Format requires %ld parameter%s, but %ld given" */
#define sem_warn_addr_array "\'\046\035\030n\176\273s\017\136\245\313\033\
\017r\306$e"    /* "'&' unnecessary for function or array $e" */
#define sem_warn_bad_shift(m,n) "shif\344$m b\136%ld \030\234\014\227AN\
SI C"    /* "shift of $m by %ld undefined in ANSI C" */,m,n
#define sem_warn_divrem_0 "div\032i\031b\136z\004oK$s"    /* "division by zero: $s" */
#define sem_warn_ucomp_0 "od\202\030s\221\014\366\017\032\031\354 0K$s"    /* "odd unsigned comparison with 0: $s" */
#define sem_warn_fp_overflow(op) "\320\034\037\237\005\3655\005o\262\320\
wK$s"    /* "floating point constant overflow: $s" */,op
#define sem_rerr_udiad_overflow(op,a,b,c) "\030s\221\014\3655\005o\262\320\
wK$s"    /* "unsigned constant overflow: $s" */,op
#define sem_rerr_diad_overflow(op,a,b,c) "s\221\014\3655\005o\262\320wK\
$s"    /* "signed constant overflow: $s" */,op
#define sem_rerr_umonad_overflow(op,a,b) "\030s\221\014\3655\005o\262\320\
wK$s"    /* "unsigned constant overflow: $s" */,op
#define sem_rerr_monad_overflow(op,a,b) "s\221\014\3655\005o\262\320wK$\
s"    /* "signed constant overflow: $s" */,op
#define sem_rerr_implicit_cast_overflow(t,a,b) \
                                "i\232\302\253\272\005\050\233$t\275o\262\
\320w"    /* "implicit cast (to $t) overflow" */,t
#define sem_warn_fix_fail "\320\034\037\233\250egr\200\216\262\247\031f\
a\036\006"    /* "floating to integral conversion failed" */
#define sem_warn_low_precision "\177w\230p\022c\032i\007\235wid\230\216\
tQtK$s"    /* "lower precision in wider context: $s" */
#define sem_warn_odd_condition "\226\003Y$s\235\216di\201\216tQt"    /* "use of $s in condition context" */
#define sem_warn_void_context "n\021\247\376eff\176\005\227\337\202\216\
tQtK$s"    /* "no side effect in void context: $s" */
#define sem_warn_olde_mismatch "\316\2107\0055\202old-By\240\371\214m\032\
m\034\242K$e"    /* "argument and old-style parameter mismatch: $e" */
#define sem_warn_uncheckable_format \
        "\'\263\034\035\316.\140\021pr\250f\057sc5\027etc. \307v\017i\252\
P\270s\021c5\174\277\242\176k\006"    /* "'format' arg. to printf/scanf etc. is variable, so cannot be checked" */
#define sem_warn_narrowing "i\232\302\253n\017\347w\037\272tK$s"    /* "implicit narrowing cast: $s" */
#define sem_warn_fn_cast \
        "$sK\272\005\375twe7 \313\237\2145\202n\331\313obj\176t"    /* "$s: cast between function pointer and non-function object" */
#define sem_warn_pointer_int "\251\302\253\272\344\264\140\021\374\'"    /* "explicit cast of pointer to 'int'" */
#define bind_err_extern_clash "Q\373 \217\100h $r\270$r \050\322k\230%l\
d \341%s\051"    /* "extern clash $r, $r (linker %ld char%s)" */
#define bind_err_duplicate_tag "d\325\302\034\003\234i\201Y$s\140a\025$\
b"    /* "duplicate definition of $s tag $b" */
#define bind_err_reuse_tag "\022-\226\037$s\140a\025$b \222$s\140ag"    /* "re-using $s tag $b as $s tag" */
#define bind_err_incomplete_tentative \
        "\002\366Pt\003t\346a\016v\003\274a\201Y$r"    /* "incomplete tentative declaration of $r" */
#define bind_err_type_disagreement "\310\003d\032ag\022em7\005\245$r"    /* "type disagreement for $r" */
#define bind_err_duplicate_definition "d\325\302\034\003\234i\201Y$r"    /* "duplicate definition of $r" */
#define bind_err_duplicate_label "d\325\302\034\003\234i\201Yl\252\243 \
$r \363"    /* "duplicate definition of label $r - ignored" */
#define bind_err_unset_label "l\252\243 $r h\222\174\3757 \336t"    /* "label $r has not been set" */
#define bind_err_undefined_static \
        "Ba\016c \313$b \174\234\014-\140\355Q\373"    /* "static function $b not defined - treated as extern" */
#define fp_err_very_big "O\262l\316\003\320\034\037\237\005\326u\003\327\
d"    /* "Overlarge floating point value found" */
#define fp_err_big_single \
        "O\262l\316\003\050s\002g\240p\022c\032i\007\275\320\034\037\237\
\005\326u\003\327d"    /* "Overlarge (single precision) floating point value found" */
#define pp_err_eof_comment "EOF\235\231mm\346"    /* "EOF in comment" */
#define pp_err_eof_string "EOF\235Br\002g"    /* "EOF in string" */
#define pp_err_eol_string "quot\003\050%c\051\026s\004\225\375\236\003\377\
w\322e"    /* "quote (%c) inserted before newline" */
#define pp_err_eof_escape "EOF\235Br\037\273cape"    /* "EOF in string escape" */
#define pp_err_missing_quote "M\342\'%c\'\235p\022-p\347c\273s\033\231m\
m5\202\322e"    /* "Missing '%c' in pre-processor command line" */
#define pp_err_if_defined "N\021i\023n\016\301\230\304\043i\027\234\006"    /* "No identifier after #if defined" */
#define pp_err_if_defined1 "N\021\'\051\035\304\043i\027\234\006\050\340"    /* "No ')' after #if defined(..." */
#define pp_err_rpar_eof "M\342\'\051\035\304%s\050\340 \031\322\003%ld"    /* "Missing ')' after %s(... on line %ld" */
#define pp_err_many_args "T\333m5\136\316\210\346\015\233m\212r\021%s\050\
\340 \031\322\003%ld"    /* "Too many arguments to macro %s(... on line %ld" */
#define pp_err_few_args "T\333few \316\210\346\015\233m\212r\021%s\050\340 \
\031\322\003%ld"    /* "Too few arguments to macro %s(... on line %ld" */
#define pp_err_missing_identifier "M\342i\023n\016\301\230\304\043\234e"    /* "Missing identifier after #define" */
#define pp_err_missing_parameter "M\342\371\214n\223\003\227\043\234\003\
%s\050\340"    /* "Missing parameter name in #define %s(..." */
#define pp_err_missing_comma "M\342\',\035\033\'\051\035\304\043\234\003\
%s\050\340"    /* "Missing ',' or ')' after #define %s(..." */
#define pp_err_undef "M\342i\023n\016\301\230\304\043\030\213"    /* "Missing identifier after #undef" */
#define pp_err_ifdef "M\342i\023n\016\301\230\304\043if\213"    /* "Missing identifier after #ifdef" */
#define pp_err_include_quote "M\342\'\074\035\033\'\"\035\304\043\002\217\
u\023"    /* "Missing '<' or '\"' after #include" */
#define pp_err_include_junk "J\030k \304\043\002\217u\376%c%s%c"    /* "Junk after #include %c%s%c" */
#define pp_err_include_file "\043\002\217u\376f\036\003%c%s%c w\204ldn\'\
\005\3237"    /* "#include file %c%s%c wouldn't open" */
#define pp_err_unknown_directive "UnkWwn di\022c\016veK\043%s"    /* "Unknown directive: #%s" */
#define pp_err_endif_eof "M\342\0437di\027\360EOF"    /* "Missing #endif at EOF" */
#define sem_err_typeclash "Il\215\013\140\244\361\245\323\0045dsK$s"    /* "Illegal types for operands: $s" */
#define sem_err_sizeof_struct "\247z\003Y$c \377\006\014\353\174ye\005\234\
\006"    /* "size of $c needed but not yet defined" */
#define sem_err_lvalue "Il\215\013\235l\326ueK\313\033\017r\306$e"    /* "Illegal in lvalue: function or array $e" */
#define sem_err_bitfield_address "b\253\301\243d\015d\021\174hav\003add\
\022ss\273"    /* "bit fields do not have addresses" */
#define sem_err_lvalue1 "Il\215\013\235l-\326ueK\'7\210\035\3655\005$b"    /* "Illegal in l-value: 'enum' constant $b" */
#define sem_err_lvalue2 "Il\215\013\026\140h\003\216tQ\3445 l-\326ueK$s"    /* "Illegal in the context of an l-value: $s" */
#define sem_err_nonconst "\241\013\235%sK\074\030kWwn\076"    /* "illegal in %s: <unknown>" */
#define sem_err_nonconst1 "\241\013\235%sKn\031\3655\005$b"    /* "illegal in %s: non constant $b" */
#define sem_err_nonconst2 "\241\013\235%sK$s"    /* "illegal in %s: $s" */
#define sem_err_nonfunction "\034te\232\372appl\136\317n\331\256\254"    /* "attempt to apply a non-function" */
#define sem_err_void_argument "\'\337d\035\326u\361m\306\174\277\316\210\
\346s"    /* "'void' values may not be arguments" */
#define sem_err_bad_cast "$sK\312\272\344$t\140\021\264"    /* "$s: illegal cast of $t to pointer" */
#define sem_err_bad_cast1 "$sK\312\272\372$t"    /* "$s: illegal cast to $t" */
#define sem_err_bad_cast2 "$sK\272\372n\331equ\200$t \241\013"    /* "$s: cast to non-equal $t illegal" */
#define sem_err_undef_struct \
        "$c \174ye\005\234\014\206c5\174\277\336Pc\225f\347m"    /* "$c not yet defined - cannot be selected from" */
#define sem_err_unknown_field "$c h\222n\021$r \301\243d"    /* "$c has no $r field" */
#define errs_membobj(m)\
  (m ? "member":"object")


#define bind_rerr_undefined_tag "$s\140a\025$b \174\234\006"    /* "$s tag $b not defined" */
#define bind_rerr_linkage_disagreement \
        "\322kag\003d\032ag\022em7\005\245$r -\140\355$m"    /* "linkage disagreement for $r - treated as $m" */
#define bind_rerr_local_extern "Q\373 $r\356\032m\034\242\361t\323-Pv\243 \
\274a\254"    /* "extern $r mismatches top-level declaration" */
#define fp_rerr_very_small "sm\013l \320\034\037\237\005\326u\003\216\262\
\225\2330.0"    /* "small floating point value converted to 0.0" */
#define fp_rerr_small_single \
        "sm\013l \050s\002g\240p\022c\032i\007\275\320\034\037\326u\003\
\216\262\225\2330.0"    /* "small (single precision) floating value converted to 0.0" */
#define pp_rerr_newline_eof "m\342\377w\322\003\375\236\003EOF -\026s\004\
t\006"    /* "missing newline before EOF - inserted" */
#define pp_rerr_nonprint_char "\030pr\250\352\341 %\043.2x \327\202\363"    /* "unprintable char %#.2x found - ignored" */
#define pp_rerr_illegal_option "\312\323\201-D%s%s"    /* "illegal option -D%s%s" */
#define pp_rerr_spurious_else "\362\350i\204\015\043\243s\003\265"    /* "spurious #else ignored" */
#define pp_rerr_spurious_elif "\362\350i\204\015\043\243i\027\265"    /* "spurious #elif ignored" */
#define pp_rerr_spurious_endif "\362\350i\204\015\0437di\027\265"    /* "spurious #endif ignored" */
#define pp_rerr_hash_line "n\210b\230m\342\227\043\322e"    /* "number missing in #line" */
#define pp_rerr_hash_error "\043\343\0337\231\030\020\014\"%s\""    /* "#error encountered \"%s\"" */
#define pp_rerr_hash_ident "\043i\023n\005\307\174\227ANSI C"    /* "#ident is not in ANSI C" */
#define pp_rerr_junk_eol "j\030k \3607\202Y\043%s \322\003\363"    /* "junk at end of #%s line - ignored" */
#define sem_rerr_sizeof_bitfield \
        "\247zeY\074b\253\301\243d\260\312\206\247zeof\050\250\275\330\006"    /* "sizeof <bit field> illegal - sizeof(int) assumed" */
#define sem_rerr_sizeof_void "\247z\003Y\'\337d\035\022quir\014-\140\355\
1"    /* "size of 'void' required - treated as 1" */
#define sem_rerr_sizeof_array "\247z\003Y\317\133\135 \017r\306\022quir\
\006,\140\355\1331\135"    /* "size of a [] array required, treated as [1]" */
#define sem_rerr_sizeof_function \
        "\247z\003Y\313\022quir\014-\140\355\247z\003Y\264"    /* "size of function required - treated as size of pointer" */
#define sem_rerr_pointer_arith \
        "\074\250\260$s \074\264\076\140\355\074\250\260$s \050\250\051\
\074\264\076"    /* "<int> $s <pointer> treated as <int> $s (int)<pointer>" */
#define sem_rerr_pointer_arith1 \
        "\074\264\260$s \074\250\076\140\355\050\250\051\074\264\260$s \
\074\250\076"    /* "<pointer> $s <int> treated as (int)<pointer> $s <int>" */
#define sem_rerr_assign_const "\271\221m7\372\'\365\035obj\176\005$e"    /* "assignment to 'const' object $e" */
#define sem_rerr_addr_regvar \
        "\'\022g\032\020\035\034tri\300t\003\245$b \257\014wh7 add\022s\015\
tak7"    /* "'register' attribute for $b ignored when address taken" */
#define sem_rerr_lcast "obj\176t\015\324\360hav\003\3757 \272\005\017\003\
\174l-\326u\273"    /* "objects that have been cast are not l-values" */
#define sem_rerr_pointer_compare \
"\366\017\032\031$s Y\237\2145d\026t:\n\205li\020\2000 \050\245\075\075 \
5\202\041\075\275\307\007l\136\215\200\272e"    /* "comparison $s of pointer and int:\n\
  literal 0 (for == and !=) is only legal case" */
#define sem_rerr_different_pointers "diff\004\037\264\140\244\273K$s"    /* "differing pointer types: $s" */
#define sem_rerr_wrong_no_args "wr\007\025n\210b\230Y\371\020\015\233$e"    /* "wrong number of parameters to $e" */
#define sem_rerr_implicit_cast1 \
        "$sKi\232\302\253\272\344\264\140\021n\331equ\200\264"    /* "$s: implicit cast of pointer to non-equal pointer" */
#define sem_rerr_implicit_cast2 "$sKi\232\302\253\272\344n\3310\026\372\
\264"    /* "$s: implicit cast of non-0 int to pointer" */
#define sem_rerr_implicit_cast3 "$sKi\232\302\253\272\344\264\140\021\374\'"    /* "$s: implicit cast of pointer to 'int'" */
#define sem_rerr_implicit_cast4 "$sKi\232\302\253\272\344$t\140\021\374\'"    /* "$s: implicit cast of $t to 'int'" */
#define sem_rerr_cant_balance "diff\004\037\264\140\244\273K$s"    /* "differing pointer types: $s" */

#define sem_rerr_void_indirection "\241\013\026di\022c\201\031\050\337\202\
\052\051K\'\052\'"    /* "illegal indirection on (void *): '*'" */
#define obj_fatalerr_io_object "I\057O \343\033\031obj\176\005B\022\223"    /* "I/O error on object stream" */
#define compiler_rerr_no_extern_decl\
    "n\021Q\373\200\274a\254\026\140r5sla\201\030\203"    /* "no external declaration in translation unit" */
#define compiler_fatalerr_io_error "I\057O \343\033wr\203\037\'%s\'"    /* "I/O error writing '%s'" */
#define driver_fatalerr_io_object "I\057O \343\033\031obj\176\005B\022\223"    /* "I/O error on object stream" */
#define driver_fatalerr_io_asm "I\057O \343\033\031\271embl\230\204tpu\005\
B\022\223"    /* "I/O error on assembler output stream" */
#define driver_fatalerr_io_listing "I\057O \343\033\031l\032t\037B\022\223"    /* "I/O error on listing stream" */
#ifdef TARGET_HAS_AOUT
#define aout_fatalerr_toomany "T\333m5\136symbol\015\245\'a.\204t\035\204\
tput"    /* "Too many symbols for 'a.out' output" */
#define aout_fatalerr_toobig "Modu\240t\333bi\025\245a.\204\005\263\034\
\020"    /* "Module too big for a.out formatter" */
#endif
#ifdef TARGET_HAS_COFF
#define coff_fatalerr_toomany "T\333m5\136\022\177ca\254\015\245COFF \263\
\360\227.\021f\036e"    /* "Too many relocations for COFF format in .o file" */
#define coff_fatalerr_toobig "Modu\240t\333bi\025\245COFF \263\034\020"    /* "Module too big for COFF formatter" */
#endif
#ifdef TARGET_IS_HELIOS
#define heliobj_warn_12bits "Off\336\005%ld \26012 b\203s"    /* "Offset %ld > 12 bits" */
#define heliobj_warn_16bits "Off\336\005%ld \26016 b\203s"    /* "Offset %ld > 16 bits" */
#define heliobj_warn_24bits "Off\336\005%ld \26024 b\203s"    /* "Offset %ld > 24 bits" */
#endif
#define misc_fatalerr_space1 "\204\344B\011\003\050\245\343\033\300ff\004\
\051"    /* "out of store (for error buffer)" */
#define misc_fatalerr_toomanyerrs "T\333m5\136\343\011s"    /* "Too many errors" */
#define misc_fatalerr_space2 "\204\344B\011\003\050\227cc\137\013\177c\051\n\
\050Co\232\036a\201Y\324\003\023\300gg\037t\252P\015\022queB\014\354\140\
h\003-\025\323\254\n \022qui\022\015\317g\022\360\023\200Ymem\011y. R\176\
o\232\036\037\354\204\005-g\270\354\n\140h\003m\011\003\022Br\246\225-g\
\027\323\254\270\033\354\140h\003p\347gr\223 b\347k7\026to\n sm\013l\230\
pi\176\273\270m\306h\243p.\051"    /* "out of store (in cc_alloc)\n\
(Compilation of the debugging tables requested with the -g option\n\
 requires a great deal of memory. Recompiling without -g, with\n\
 the more restricted -gf option, or with the program broken into\n\
 smaller pieces, may help.)" */
#define misc_fatalerr_space3 "\204\344B\011\003\050\227cc\137\013\177c\051"    /* "out of store (in cc_alloc)" */
#define pp_fatalerr_hash_error "\043\343\0337\231\030\020\014\"%s\""    /* "#error encountered \"%s\"" */

#define driver_message_nolisting \
        "Un\352\233\3237 %s \245l\032t\002gK-l \323\201\265\n"    /* "Unable to open %s for listing: -l option ignored\n" */
#ifdef NO_ASSEMBLER_OUTPUT
#define driver_message_noasm \
        "Th\307\262\247\031Y\324\003\366\036\230do\361\174s\325p\011\005\
-s\n"    /* "This version of the compiler does not support -s\n" */
#endif
#define driver_message_writefail "C\204ldn\'\005wr\203\003f\036\003\'%s\'\n"    /* "Couldn't write file '%s'\n" */
#define driver_message_oddoption "Un\022\231gniz\014\323\201\'%c\'K\265\n"    /* "Unrecognized option '%c': ignored\n" */
#define driver_message_readfail "C\204ldn\'\005\022a\202f\036\003\'%s\'\n"    /* "Couldn't read file '%s'\n" */
/* NB the next error can not arise with the current ARM driver */
#define driver_message_toomanyfiles "T\333m5\136f\036\003\316s"    /* "Too many file args" */
#define driver_message_asmstdout "As\336mbl\136\231\376w\036l g\021\233\
Bd\204t\n"    /* "Assembly code will go to stdout\n" */
#define driver_message_no_listing \
        "-m \323\201\226ePs\015\354\204\005s\204rc\003l\032t\002g. Ign\011\
\006\n"    /* "-m option useless without source listing. Ignored\n" */
#define driver_message_nomap "-m f\036\003\174ava\036\352\033c\011r\325\
\005\363\n"    /* "-m file not available or corrupt - ignored\n" */
#define driver_message_notest \
        "Th\307\262\247\031Y\324\003\366\036\230do\361\174s\325p\011\005\
\324\003-t\273\005\323\254\n"    /* "This version of the compiler does not support the -test option\n" */
#define driver_message_needfile "A\005P\100\005\007\003f\036\003\316\210\
7\005w5t\006\n"    /* "At least one file argument wanted\n" */
#ifndef COMPILING_ON_ARM_OS
#define driver_message_spool "\204tpu\372c\177g1.\177\025\046 c\177g2.\177\
g\n"    /* "output to clog1.log & clog2.log\n" */
#endif
#define driver_message_testfile "N\021f\036\361\013\177w\014\354 -teB\n"    /* "No files allowed with -test\n" */
/* messages generated by misc.c */

#ifndef TARGET_IS_UNIX
#define misc_message_lineno(f,l,s) "\"%s\"\270\322\003%ldK%sK"    /* "\"%s\", line %ld: %s: " */,f,l,s
#else
#define misc_message_lineno(f,l,s) "%sK%ldK%sK"    /* "%s: %ld: %s: " */,f,l,s
#endif
#define misc_message_sum1(f,nx,neq1) "%sK%ld w\017n\002g%s"    /* "%s: %ld warning%s" */, f, nx, \
 neq1 ? "":"s"

#define misc_message_sum2 " \050\053 %ld s\325p\022ss\006\051"    /* " (+ %ld suppressed)" */
#define misc_message_sum3(nx,neq1) "\270%ld \343\011%s"    /* ", %ld error%s" */, nx, \
 neq1 ? "":"s"

#define misc_message_sum5(nx,neq1) "\270%ld s\004i\204\015\343\011%s\n"    /* ", %ld serious error%s\n" */, nx, \
 neq1 ? "":"s"


#ifdef TARGET_STACK_MOVES_ONCE
/* Cannot be issued if NARGREGS==0 */
#define warn_untrustable "\030truB\352\231\376g7\004\267\245%s"    /* "untrustable code generated for %s" */
#endif

 /* The next batch of things just get mapped onto syserr codes */

#define syserr_mkqualifiedtype "mkqualifiedtype(..., %ld)"
#define syserr_typeof "typeof(%ld)"
#define syserr_alignoftype "alignoftype(%ld,%#lx)"
#define syserr_sizeoftype "sizeoftype(%ld,%#lx)"
#define syserr_codeoftype "codeoftype"
#define syserr_equivtype "equivtype(%ld)"
#define syserr_compositetype "compositetype(%ld)"
#define syserr_trydiadicreduce "trydiadreduce(unsigned op %ld)"
#define syserr_trydiadicreduce1 "trydiadreduce(signed op %ld)"
#define syserr_trydiadicreduce2 "trydiadreduce(float op %ld)"
#define syserr_fp_op "FP op %ld unknown"
#define syserr_trymonadicreduce "trymonadreduce(int op %ld)"
#define syserr_trymonadicreduce1 "trymonadreduce(float op %ld)"
#define syserr_coerceunary "coerceunary(bitfieldvalue)"
#define syserr_coerceunary1 "coerceunary(%ld,%#lx)"
#define syserr_bitfieldassign "bitfieldassign"
#define syserr_mkindex "sem(mkindex)"
#define syserr_ptrdiff "sem(mkbinary/ptrdiff)"
#define syserr_va_arg_fn "sem(odd va_arg fn)"
#define syserr_mkcast "mkcast(%ld,%#lx)"
#define syserr_mkcast1 "mkcast(%ld)"
#define syserr_te_plain "te_plain(%ld)"
#define syserr_clone_node "clone_node(%ld)"
#define syserr_optimise "optimise &(%ld)"
#define syserr_optimise1 "optimise(%ld)"
#define syserr_mcrepofexpr "mcrepofexpr(%ld,%#lx)"
#define syserr_mcreparray "mcrep(array %ld)"
#define syserr_newdbuf "pp_newdbuf(%ld,%ld)"
#define syserr_pp_recursion "pp recursive sleep: '%s'"
#define syserr_pp_special "pp_special(%ld)"
#define syserr_overlarge_store1 "Overlarge storage request (binder %ld)"
#define syserr_overlarge_store2 "Overlarge storage request (local %ld)"
#define syserr_discard2 "discard2 %p"
#define syserr_discard3 "discard3 %p"
#define syserr_alloc_unmark "alloc_unmark - called too often"
#define syserr_alloc_unmark1 "alloc_unmark(no drop_local_store())"
#define syserr_alloc_reinit "alloc_reinit(no drop_local_store())"
#define syserr_addclash "add_clash (0x%lx, 0x%lx)"
#define syserr_forget_slave "forget_slave(%ld, %ld) %ld"
#define syserr_GAP "GAP in reference_register"
#define syserr_corrupt_register "corrupt_register %ld %p"
#define syserr_regalloc "regalloc(corrupt/alloc)"
#define syserr_regalloc_typefnaux "regalloc(typefnaux)"
#define syserr_regalloc_POP "regalloc(POP)"
#define syserr_call2 "CALL2 %ld"
#define syserr_dataflow "dataflow &-var"
#define syserr_choose_real_reg "choose_real_reg %lx"
#define syserr_fail_to_spill "Failed to spill register for %ld"
#define syserr_regalloc_reinit2 "regalloc_reinit2"
#define syserr_regheap "Register heap overflow"
#define syserr_bad_fmt_dir "bad fmt directive"
#define syserr_syserr "syserr simulated"
#define syserr_r1r "r1r %ld"
#define syserr_r2r "r2r %ld"
#define syserr_mr "mr %ld"
#define syserr_expand_jop "expand_jop(2address)"
#define syserr_nonauto_active "Non auto 'active_binders' element"
#define syserr_size_of_binder "size_of_binder"
#define syserr_insertblockbetween "insertblockbetween"
#define syserr_reopen_block "reopen_block called"
#define syserr_scaled_address "emit5(scaled address)"
#define syserr_expand_pushr "expand_jop_macro(PUSHR)"
#define syserr_remove_noop_failed "remove_noop failed"
#define syserr_remove_noop_failed2 "remove_noop failed2"
#define syserr_bad_bindaddr "Bad bindaddr_() with LDRVx1"
#define syserr_ldrfk "duff LDRF/DK %lx"
#define syserr_ldrk "duff LDR/B/WK %lx"
#define syserr_branch_backptr "Bad back-pointer code in branch_chain"
#define syserr_no_main_exit "use_cond_field(no main exit)"
#define syserr_two_returns "Two return exits from a block"
#define syserr_unrefblock "unrefblock"
#define syserr_zip_blocks "zip_blocks(SETSP confused %ld!=%ld)"
#define syserr_live_empty_block "ALIVE empty block L%ld"
#define syserr_loctype "loctype"
#define syserr_adconbase "cse_adconbase"
#define syserr_find_exprn "CSE: find_exprn %ld"
#define syserr_removecomparison "CSE: removecomparison %lx"
#define syserr_evalconst "CSE: evalconst %lx"
#define syserr_scanblock "cse_scanblock %08lx"
#define syserr_prune "csescan(prune)"
#define syserr_globalize "globalize_declaree1(%p,%ld)"
#define syserr_globalize1 "globalize_typeexpr(%p,%ld)"
#define syserr_copy_typeexpr "copy_typeexpr(%p,%ld)"
#define syserr_tentative "is_tentative(tmpdataq == NULL)"
#define syserr_tentative1 "is_tentative(ADCON)"
#define syserr_tentative2 "tentative definition confusion"
#define syserr_instate_decl "instate_decl %ld"
#define syserr_totarget "totargetsex(%d)"
#define syserr_vg_wpos "vg_wpos(%ld)"
#define syserr_vg_wflush "vg_wflush(type=0x%x)"
#define syserr_gendcI "gendcI(%ld,%ld)"
#define syserr_vg_wtype "vg_wtype=0x%x"
#define syserr_codevec "code vector overflow"
#define syserr_nonstring_lit "non-string literal: %.8lx"
#define syserr_addr_lit "Address-literals should not arise in HELIOS mode"
#define syserr_dumplits "dumplits(codep&3)"
#define syserr_dumplits1 "codebuf(dumplits1)"
#define syserr_dumplits2 "codebuf(dumplits2)"
#define syserr_outlitword "outlitword confused"
#define syserr_dumplits3 "codebuf(dumplits3)"
#define syserr_addlocalcse "addlocalcse %ld"
#define syserr_cse_lost_def "cse: def missing"
#define syserr_cse_lost_use "cse: use missing"
#define syserr_cse_linkrefstodefs "CSE: linkrefstodefs"
#define syserr_linkrefstodefs "cse_linkrefstodefs"
#define syserr_safetolift "cse_safetolift"
#define syserr_storecse "storecse %ld %ld\n"
#define syserr_baseop "CSE: baseop %lx"
#define syserr_cse_wordn "CSE_WORDn"
#define syserr_addcsedefs "addcsedefs"
#define syserr_cse_preheader "CSE: loop preheader %d != %ld"
#define syserr_modifycode "modifycode %ld %ld!=%ld"
#define syserr_regtype "ensure_regtype(%lx)"
#define syserr_struct_val "Value of structure requested improperly"
#define syserr_missing_expr "missing expr"
#define syserr_checknot "s_checknot"
#define syserr_structassign_val "value of structure assignment needed"
#define syserr_structdot "Struct returning function (with '.') reaches cg"
#define syserr_floating "Float %%"
#define syserr_cg_expr  "cg_expr(%ld = $s)"
#define syserr_bad_reg "bad reg %lx in use"
#define syserr_bad_fp_reg "fp reg in use"
#define syserr_cg_fnarg "cg_fnarg(odd rep %lx)"
#define syserr_fnarg_struct "cg(struct arg confused)"
#define syserr_cg_fnarg1 "cg_fnargs confused"
#define syserr_cg_argcount "arg count confused"
#define syserr_cg_fnarg2 "cg_fnargs tidy"
#define syserr_padbinder "odd padbinder$b in cg_fnargs()"
#define syserr_cg_fnap "cg_fnap"
#define syserr_cg_cmd "cg_cmd(%ld = $s)"
#define syserr_cg_endcase "cg_cmd(endcase)"
#define syserr_cg_break "cg_cmd(break)"
#define syserr_cg_cont "cg_cmd(cont)"
#define syserr_cg_switch "switch expression must have integer type"
#define syserr_cg_caselist "cg_caselist"
#define syserr_cg_case "cg_cmd(case)"
#define syserr_unset_case "Unset case_lab"
#define syserr_cg_default "cg_cmd(default)"
#define syserr_cg_badrep "rep bad in comparison %.8lx"
#define syserr_cg_plain "(plain) qualifies non-<narrow-int-binder>"
#define syserr_cg_cast "Illegal cast involving a structure or union"
#define syserr_cg_fpsize "fp sizes are wrong %ld %ld"
#define syserr_cg_cast1 "bad mode %ld in cast expression"
#define syserr_cg_cast2 "cast %ld %ld %ld %ld"
#define syserr_cg_indexword "Indexed address mode with word-store"
#define syserr_cg_bad_width "bad width %ld in cg_stind"
#define syserr_cg_bad_mode "bad mcmode %ld in cg_stind"
#define syserr_chroma "chroma_check(target.h setup wrong or multi-temp op confused)"
#define syserr_Q_swap "Q_swap(%lx)"
#define syserr_cg_stgclass "Funny storage class %#lx"
#define syserr_cg_storein "cg_storein(%ld)"
#define syserr_cg_addr "p nasty in '&(p=q)'"
#define syserr_cg_addr1 "cg_addr(%ld)"
#define syserr_cg_shift0 "n=0 in shift_op1"
#define syserr_not_shift "not a shift in shift_operand()"
#define syserr_not_shift1 "not a shift in shift_amount()"
#define syserr_integer_expected "integer expression expected"
#define syserr_nonauto_arg "Non-auto arg!"
#define syserr_struct_result "Unexpected struct result"
#define syserr_cg_topdecl "cg_topdecl(not fn type)"
#define syserr_cg_unknown "unknown top level %ld"

#ifdef TARGET_HAS_AOUT
#define syserr_aout_reloc "relocate_code_to_data(PCreloc)"
#define syserr_aout_checksym "obj_checksym(%s)"
#define syserr_aout_reloc1 "obj_coderelocation %.8lx"
#define syserr_aout_gendata "obj_gendata(%ld)"
#define syserr_aout_datalen "obj_data len=%ld"
#define syserr_aout_data "obj_data %ldEL%ld'%s'"
#define syserr_aout_debug "writedebug: aoutobj linked with xxxdbg not dbx"
#  ifdef TARGET_HAS_DEBUGGER  /* dbx support */
#define syserr_too_many_types "too many types in dbx"
#define syserr_addcodep "bad pointer in dbg_addcodep"
#define syserr_tagbindsort "bad tagbindsort 0x%08lx"
#define syserr_sprinttype "sprinttype(%p,0x%lx)"
#define syserr_dbx_locvar "debugger table confusion(local variable $r %lx %lx)"
#define syserr_dbx_scope "dbg_scope"
#define syserr_dbx_proc "dbg_proc"
#define syserr_dbx_proc1 "dbg_proc confused"
#define syserr_dbx_write "dbg_write(%lx)"
#  endif
#endif

#ifdef TARGET_HAS_COFF
#define syserr_coff_reloc "relocate_code_to_data(PCreloc)"
#define syserr_coff_pcrel "coff(unexpected X_PCreloc)"
#define syserr_coff_m88000 "coffobj(X_DataAddr needs extending)"
#define syserr_coff_toobig "coffobj(Module over 64K -- fix)"
#define syserr_coff_checksym "obj_checksym($r)"
#define syserr_coff_reloc1 "obj_coderelocation(%.8lx)"
#define syserr_coff_gendata "obj_gendata(%ld)"
#define syserr_coff_datalen "obj_data len=%ld"
#define syserr_coff_data "obj_data %ldEL%ld'%s'"
#endif

#ifdef TARGET_IS_HELIOS
#define syserr_heliobj_bad_xref "Invalid external reference $r %#lx"
#define syserr_heliobj_dataseggen "Data seg generation confused"
#define syserr_heliobj_gendata "obj_gendata(%ld)"
#define syserr_heliobj_datalen "obj_data len=%ld"
#define syserr_heliobj_data "obj_data %ldEL%ld'%s'"
#define syserr_heliobj_align "Helios obj align"
#define syserr_heliobj_2def "double definition in obj_symref $r"
#define syserr_heliobj_codedata "code/data confusion for $r"
#endif

      /* The following remain as ordinary (uncompressed) strings */

#define misc_message_announce "+++ %s: "
#define misc_message_announce1 "+++ %s: %ld: %s: "

/*
 * @@@@@@ Wording here is subject to change...
 */
#define misc_message_warning   "Warning"
#define misc_message_error     "Error"
#define misc_message_serious   "Serious error"
#define misc_message_fatal     "Fatal error"
#define misc_message_fatal_internal "Fatal internal error"
#define misc_message_abandoned "\nCompilation abandoned.\n"

#define bind_msg_const "constant expression"

#define moan_floating_type "floating type initialiser"
#define moan_static_int_type "static integral type initialiser"

/*
 * The following are used in init_sym_name_table() and/or ctxtofdeclflag()
 * and eventually find their ways into various error messages.
 */

#define errname_aftercommand       " after command"
#define errname_unset              "<?>"
#define errname_pointertypes       "<after * in declarator>"
#define errname_toplevel           "<top level>"
#define errname_structelement      "<structure component>"
#define errname_formalarg          "<formal parameter>"
#define errname_formaltype         "<formal parameter type declaration>"
#define errname_blockhead          "<head of block>"
#define errname_typename           "<type-name>"
#define errname_unknown            "<unknown context>"
#define errname_error              "<previous error>"
#define errname_invisible          "<invisible>"
#define errname_let                "<let>"
#define errname_character          "<character constant>"
#define errname_wcharacter         "<wide character constant>"
#define errname_integer            "<integer constant>"
#define errname_floatcon           "<floating constant>"
#define errname_string             "<string constant>"
#define errname_wstring            "<wide string constant>"
#define errname_identifier         "<identifier>"
#define errname_binder             "<variable>"
#define errname_tagbind            "<struct/union tag>"
#define errname_cond               "_?_:_"
#define errname_displace           "++ or --"
#define errname_postinc            "++"
#define errname_postdec            "--"
#define errname_arrow              "->"
#define errname_addrof             "unary &"
#define errname_content            "unary *"
#define errname_monplus            "unary +"
#define errname_neg                "unary -"
#define errname_fnap               "<function argument>"
#define errname_subscript          "<subscript>"
#define errname_cast               "<cast>"
#define errname_sizeoftype         "sizeof"
#define errname_sizeofexpr         "sizeof"
#define errname_ptrdiff            "-"   /* for (a-b)=c msg */
#define errname_endcase            "break"
#define errname_block              "<block>"
#define errname_decl               "decl"
#define errname_fndef              "fndef"
#define errname_typespec           "typespec"
#define errname_typedefname        "typedefname"
#define errname_valof              "valof"
#define errname_ellipsis           "..."
#define errname_eol                "\\n"
#define errname_eof                "<eof>"

#ifdef RANGECHECK_SUPPORTED
#  define errname_rangecheck       "<rangecheck>"
#  define errname_checknot         "<checknot>"
#endif

/* end of miperrs.h */
/*
 * cfe/feerrs.h - prototype for front-end error messages file
 * version 2.
 */

  /* Ordinary error messages - mapped onto numeric codes */

#define lex_warn_force_unsigned "%s\140\355%sul\23532-b\253i\232Pm\346a\
\254"    /* "%s treated as %sul in 32-bit implementation" */
#define lex_warn_multi_char "n\331p\011t\352\206\1741 \341\235\'\340\'"    /* "non-portable - not 1 char in '...'" */

#define syn_warn_hashif_undef "Un\234\014m\212r\021\'%s\'\235\043i\027-\
\140\3550"    /* "Undefined macro '%s' in #if - treated as 0" */
#define syn_warn_invent_extern "\002v\346\037\'Q\373\026\005%s\050\051\073\'"    /* "inventing 'extern int %s();'" */
#define syn_warn_unary_plus "Un\017\136\'\053\035\307\317fe\034\350\003\
YANSI C"    /* "Unary '+' is a feature of ANSI C" */
#define syn_warn_spurious_braces "\362\350i\204\015\173\175 \017o\030\202\
sc\013\017\026\321\004"    /* "spurious {} around scalar initialiser" */
#define syn_warn_dangling_else "D5gl\037\'\243\336\'\026d\246\034\361\224\
s\247b\240\343\011"    /* "Dangling 'else' indicates possible error" */
#define syn_warn_void_return "n\331\326u\003\022t\350n\235n\331\337\202\
\256\254"    /* "non-value return in non-void function" */
#define syn_warn_use_of_short \
        "\'sh\011t\035s\177w\004\140h5 \374\035\031\324\307m\212h\002\003\
\050\336\003m5u\013\051"    /* "'short' slower than 'int' on this machine (see manual)" */
#define syn_warn_enum_unchecked "N\021\310\003\242\176k\037Y\'7\210\'\026\
\140h\307\366\036\004"    /* "No type checking of 'enum' in this compiler" */
#define syn_warn_undeclared_parm \
        "\263\200\371\214$r \174\274\014\206\374\035\330\006"    /* "formal parameter $r not declared - 'int' assumed" */
#define syn_warn_old_style "Old-By\240\313$r"    /* "Old-style function $r" */
#define syn_warn_give_args "Dep\022c\267\274a\201%s\050\275\206giv\003\017\
\025\310\273"    /* "Deprecated declaration %s() - give arg types" */
#define syn_warn_ANSI_decl "ANSI By\240\313\274a\201\226\006\270\'%s\050\
\340\051\'"    /* "ANSI style function declaration used, '%s(...)'" */
#define syn_warn_archaic_init "Anci7\005\263 of\026\321a\254\270\226\003\'\
\075\'"    /* "Ancient form of initialisation, use '='" */
#define syn_warn_untyped_fn "\'\002\005%s\050\051\035\330\014\206\'\337\
d\'\026t7d\006\077"    /* "'int %s()' assumed - 'void' intended?" */
#define syn_warn_no_named_member "$c h\222n\021n\223\014memb\004"    /* "$c has no named member" */
#define syn_warn_extra_comma "S\325\004flu\204\015\',\'\235\'7\210\035\274\
a\254"    /* "Superfluous ',' in 'enum' declaration" */

#define vargen_warn_nonull "om\203t\037tra\036\037\'\\0\035\245%s \133%\
ld\135"    /* "omitting trailing '\\0' for %s [%ld]" */
#define vargen_warn_unnamed_bitfield \
        "Unn\223\014b\253\301\243d\026\321\014\2330"    /* "Unnamed bit field initialised to 0" */

#define lex_err_ioverflow "N\210b\230%s\140\333l\316\003\24532-b\253i\232\
Pm\346a\254"    /* "Number %s too large for 32-bit implementation" */
#define lex_err_overlong_fp "G\347ssl\136o\262-l\007\025\320\034\037\237\
\005n\210b\004"    /* "Grossly over-long floating point number" */
#define lex_err_fp_syntax1 "D\207\253\022quir\014\304\251\0077\005m\017\
k\004"    /* "Digit required after exponent marker" */
#define lex_err_overlong_hex "G\347ssl\136o\262-l\007\025hQa\023cim\200\
\3655t"    /* "Grossly over-long hexadecimal constant" */
#define lex_err_overlong_int "G\347ssl\136o\262-l\007\025n\210b\004"    /* "Grossly over-long number" */
#define lex_err_need_hex_dig "HQ d\207\253\377\006\014\3040x \0330X"    /* "Hex digit needed after 0x or 0X" */
#define lex_err_need_hex_dig1 "M\342hQ d\207\203\050s\275\304\\x"    /* "Missing hex digit(s) after \\x" */
#define lex_err_backslash_blank \
        "\\\074\362\212e\2605\202\\\074t\252\260\017\003\002\326i\202Br\
\037\273cap\273"    /* "\\<space> and \\<tab> are invalid string escapes" */
#define lex_err_unterminated_string "New\322\003\0337\202Yf\036\003\354\
\227Br\002g"    /* "Newline or end of file within string" */
#define lex_err_bad_hash "m\032pl\212\014p\022p\347c\273s\033\341\212\214\'\
%c\'"    /* "misplaced preprocessor character '%c'" */
#define lex_err_bad_char "\312\341\212\214\0500x%lx \075 \'%c\'\051\235\
s\204rce"    /* "illegal character (0x%lx = \'%c\') in source" */
#define lex_err_bad_noprint_char "\312\341\212\214\050hQ \231\3760x%x\051\
\235s\204rce"    /* "illegal character (hex code 0x%x) in source" */
#define lex_err_ellipsis "\050\340\275m\226\005hav\003Q\212tl\1363 dots"    /* "(...) must have exactly 3 dots" */
#define lex_err_illegal_whitespace "$s\356\306\174hav\003wh\203\273p\212\
\003\227\203"    /* "$s may not have whitespace in it" */

#define syn_err_bitsize "b\253\247z\003%ld \312\2061 \330\006"    /* "bit size %ld illegal - 1 assumed" */
#define syn_err_zerobitsize "z\004\021wid\324 n\223\014b\253\301\243\202\
\2061 \330\006"    /* "zero width named bit field - 1 assumed" */
#define syn_err_arraysize "Arr\306\247z\003%ld \312\2061 \330\006"    /* "Array size %ld illegal - 1 assumed" */
#define syn_err_expected "\367$s -\026s\004\225\375\236\003$l"    /* "expected $s - inserted before $l" */
#define syn_err_expected1 "\367$s%s -\026s\004\225\375\236\003$l"    /* "expected $s%s - inserted before $l" */
#define syn_err_expected2 "\367$s \033$s -\026s\004\225$s \375\236\003$\
l"    /* "expected $s or $s - inserted $s before $l" */
#define syn_err_expecteda "\367$s"    /* "expected $s" */
#define syn_err_expected1a "\367$s%s"    /* "expected $s%s" */
#define syn_err_expected2a "\367$s \033$s"    /* "expected $s or $s" */
#define syn_err_mix_strings "\341 5\202wi\376\050L\"\340\"\275Br\002g\015\
d\021\174\216c\0347\034e"    /* "char and wide (L\"...\") strings do not concatenate" */
#define syn_err_expected_expr "\074\251\022s\247\007\260\367\353\327\202\
$s"    /* "<expression> expected but found $s" */
#define syn_err_type_needed "\310\003n\223\003\251\176t\006"    /* "type name expected" */
#ifdef EXTENSION_VALOF
#define syn_err_valof_block \
        "\173 \261l\177w\037\317\272\005w\036l \277t\355VALOF b\177ck"    /* "{ following a cast will be treated as VALOF block" */
#endif
#define syn_err_typedef "\310\006e\027n\223\003$r \226\014\227\251\022s\
\247\031\216tQt"    /* "typedef name $r used in expression context" */
#define syn_err_assertion "\137\137\137\271\004t\0500\270$e\051"    /* "___assert(0, $e)" */
#define syn_err_expected_id "Exp\303\074i\023n\016\301\004\260\304$s \353\
\327\202$l"    /* "Expected <identifier> after $s but found $l" */
#define syn_err_hashif_eof "EOF \174\377w\322\003\304\043i\027\340"    /* "EOF not newline after #if ..." */
#define syn_err_hashif_junk "J\030k \304\043i\027\074\251\022s\247\007\076"    /* "Junk after #if <expression>" */
#define syn_err_initialisers "t\333m5y\026\321\004\015\227\173\175 \245\
agg\022g\034e"    /* "too many initialisers in {} for aggregate" */
#define syn_err_initialisers1 "\173\175\356\226\005hav\0031 ePm7\372\002\
\321\003sc\013\017"    /* "{} must have 1 element to initialise scalar" */
#define syn_err_default "\'\213ault\035\174\227s\311\242 \363"    /* "'default' not in switch - ignored" */
#define syn_err_default1 "d\325\302\034\003\'\213ault\035\272\003\265"    /* "duplicate 'default' case ignored" */
#define syn_err_case "\'\272e\035\174\227s\311\242 \363"    /* "'case' not in switch - ignored" */
#define syn_err_case1 "d\325\302\267\272\003\3655tK%ld"    /* "duplicated case constant: %ld" */
#define syn_err_expected_cmd "\074\231mm5d\260\367\353\327\202\317$s"    /* "<command> expected but found a $s" */
#define syn_err_expected_while "\'wh\036e\035\367\304\'do\035\206\327\202\
$l"    /* "'while' expected after 'do' - found $l" */
#define syn_err_else "M\032pl\212\014\'\243\336\035\265"    /* "Misplaced 'else' ignored" */
#define syn_err_continue "\'\216t\002ue\035\174\227\177\323 \363"    /* "'continue' not in loop - ignored" */
#define syn_err_break "\'b\022ak\035\174\227\177\323 \033s\311\242 \363"    /* "'break' not in loop or switch - ignored" */
#define syn_err_no_label "\'goto\035\174\261l\177w\014b\136l\252\243 \363"    /* "'goto' not followed by label - ignored" */
#define syn_err_no_brace "\'\173\035Y\313bod\136\367\206\327\202$l"    /* "'{' of function body expected - found $l" */
#define syn_err_stgclass \
        "B\011ag\003\217\100\015$s \174p\004m\203\225\227\216tQ\005%s \363"    /* "storage class $s not permitted in context %s - ignored" */
#define syn_err_stgclass1 "B\011ag\003\217\100\015$s\026\366a\016b\240\354 \
$m \363"    /* "storage class $s incompatible with $m - ignored" */
#define syn_err_typeclash "\310\003$s\026\216s\032t7\005\354 $m"    /* "type $s inconsistent with $m" */
#define syn_err_tag_brace \
        "\'\173\035\033\074i\023n\016\301\004\260\367\304$s\270\353\327\
\202$l"    /* "'{' or <identifier> expected after $s, but found $l" */
#define syn_err_expected3 "Exp\176t\037\074\274\034\011\260\033\074\310\
e\076\270\353\327\202$l"    /* "Expecting <declarator> or <type>, but found $l" */
#define syn_err_unneeded_id \
        "I\023n\016\301\230\050%s\275\327d\235\074\252Br\212\005\274\034\011\
\260\363"    /* "Identifier (%s) found in <abstract declarator> - ignored" */
#define syn_err_undef_struct(m,b,s) \
        "\030\234\014$c %sK$r"    /* "undefined $c %s: $r" */, b, errs_membobj(m), s
#define syn_err_selfdef_struct(m,b,s) \
        "\034te\232\372\002\217u\376$c %sK$r \354\227\203s\243f"    /* "attempt to include $c %s: $r within itself" */, \
        b, errs_membobj(m), s
#define syn_err_void_object(m,s) "\312\'\337d\035%sK$r"    /* "illegal 'void' %s: $r" */, errs_membobj(m), s
#define syn_err_duplicate_type \
        "d\325\302\034\003\310\003\362\176if\246a\201Y\263\200\371\214$\
r"    /* "duplicate type specification of formal parameter $r" */
#define syn_err_not_a_formal "N\331\263\200$r\235\371\020-\310e-\362\176\
i\301\004"    /* "Non-formal $r in parameter-type-specifier" */
#define syn_err_cant_init "$m v\017i\252P\015m\306\174\277\002\321\006"    /* "$m variables may not be initialised" */
#define syn_err_enumdef \
        "\074i\023n\016\301\004\260\367\353\327\202$l\235\'7\210\035\234\
i\254"    /* "<identifier> expected but found $l in 'enum' definition" */
#define syn_err_misplaced_brace "M\032pl\212\014\'\173\035\360t\323 Pv\243 \
\206\257\037b\177ck"    /* "Misplaced '{' at top level - ignoring block" */

#define vargen_err_long_string "Br\037\002\321\230l\007g\004\140h5 %s \133\
%ld\135"    /* "string initialiser longer than %s [%ld]" */
#define vargen_err_nonstatic_addr \
        "n\331Ba\016c add\022s\015$b\235\264\026\321\004"    /* "non-static address $b in pointer initialiser" */
#define vargen_err_bad_ptr "$sK\312\226\003\227\264\026\321\004"    /* "$s: illegal use in pointer initialiser" */
#define vargen_err_init_void "obj\176t\015Y\310\003\'\337d\035c5 \174\277\
\002\321\006"    /* "objects of type 'void' can not be initialised" */
#define vargen_err_undefined_struct \
        "$c\356\226\005\277\234\014\245\050Ba\016c\275v\017i\352\274a\254"    /* "$c must be defined for (static) variable declaration" */
#define vargen_err_undefined_union \
        "$c\356\226\005\277\234\014\245\050Ba\016c\275v\017i\352\274a\254"    /* "$c must be defined for (static) variable declaration" */
#define vargen_err_open_array "Un\002\321\014Ba\016c \133\135 \017ray\015\
\241\013"    /* "Uninitialised static [] arrays illegal" */
#define vargen_err_overlarge_reg "g\177b\200\022g\032\214n\210b\004\140\
\333l\316e"    /* "global register number too large" */
#define vargen_err_not_int "\002\326id\140\244\003\245g\177b\013\026\005\
\022g\032\020"    /* "invalid type for global int register" */
#define vargen_err_not_float "\002\326id\140\244\003\245g\177b\200\320\360\
\022g\032\020"    /* "invalid type for global float register" */
#ifdef TARGET_CALL_USES_DESCRIPTOR
#define vargen_err_badinit "\241\013\026\321a\201\233$r%\053ld"    /* "illegal initialisation to $r%+ld" */
#endif
#ifdef TARGET_IS_HELIOS
#define vg_err_dynamicinit "In\321\014dyn\223\246 \017r\306\354 -ZR \033\
-ZL"    /* "Initialised dynamic array with -ZR or -ZL" */
#endif
#define vargen_rerr_nonaligned \
        "N\331\013\221\014ADCON \360d\034a\0530x%lx \050\326u\003$r\053\
0x%lx\275\336\372NULL"    /* "Non-aligned ADCON at data+0x%lx (value $r+0x%lx) set to NULL" */
#define vargen_rerr_datadata_reloc \
       "RISC OS \050\033o\324\004\275\022\346r5\005modu\240h\222Ba\016c\
\026\203.\140\021d\034\317$r"    /* "RISC OS (or other) reentrant module has static init. to data $r" */

#define lex_rerr_8_or_9 "d\207\2538 \0339 \327d\235oct\200n\210b\004"    /* "digit 8 or 9 found in octal number" */
#define lex_rerr_pp_number "n\210b\230\241\013l\136\261l\177w\014b\136P\
t\020"    /* "number illegally followed by letter" */
#define lex_rerr_hex_exponent "hQ n\210b\230c5\174hav\003\251\007\346"    /* "hex number cannot have exponent" */
#define lex_rerr_esc16_truncated \
        "o\262l\316\003\273cap\003\'\\x%s%lx\035t\355\'\\x%lx\'"    /* "overlarge escape '\\x%s%lx' treated as '\\x%lx'" */
#define lex_rerr_esc8_truncated "o\262l\316\003\273cap\003\'\\%o\035t\355\'\\\
%o\'"    /* "overlarge escape '\\%o' treated as '\\%o'" */
#define lex_rerr_illegal_esc "\312Br\037\273cap\003\'\\%c\035-\140\355%\
c"    /* "illegal string escape '\\%c' - treated as %c" */
#define lex_rerr_not1wchar "L\'\340\035\377\006\015Q\212tl\1361 wi\376\341\
\212\020"    /* "L'...' needs exactly 1 wide character" */
#define lex_rerr_empty_char "n\021\341\015\227\341\212\214\3655\005\'\'"    /* "no chars in character constant ''" */
#define lex_rerr_overlong_char "m\011\003\3245 4 \341\015\227\341\212\214\
\3655t"    /* "more than 4 chars in character constant" */

#define syn_rerr_array_0 "\017r\306\1330\135 \327d"    /* "array [0] found" */
#ifdef EXTENSION_VALOF
#define syn_rerr_void_valof "\337\202\326Yb\177ck\015\017\003\174p\004m\
\203t\006"    /* "void valof blocks are not permitted" */
#endif
#define syn_rerr_undeclared "\030\274\014n\351,\026v\346\037\'Q\373\026\
\005%s\'"    /* "undeclared name, inventing 'extern int %s'" */
#define syn_rerr_insert_parens \
        "\3357\324\273\361\050\220\051\026s\004\225\017o\030\202\251\022\
s\247\031\261l\177w\037$s"    /* "parentheses (..) inserted around expression following $s" */
#define syn_rerr_return "\022t\350n \074\251r\260\312\245\337\202\256\254"    /* "return <expr> illegal for void function" */
#define syn_rerr_qualified_typedef(b,m) \
        "$m\140\244\006e\027$b h\222$m \022-\362\176i\301\006"    /* "$m typedef $b has $m re-specified" */, m, b, m
#define syn_rerr_missing_type "m\342\310\003\362\176if\246a\201\206\374\
\035\330\006"    /* "missing type specification - 'int' assumed" */
#define syn_rerr_long_float "ANSI C do\361\174s\325p\011\005\'l\007\025\
\320\034\'"    /* "ANSI C does not support 'long float'" */
#define syn_rerr_missing_type1 \
        "om\203\225\074\310e\260\375\236\003\263\200\274\034\033\206\374\
\035\330\006"    /* "omitted <type> before formal declarator - 'int' assumed" */
#define syn_rerr_missing_type2 \
        "\313p\347to\310\003\263\200$r \377\006\015\310\003\033\217\100\015\
\206\374\035\330\006"    /* "function prototype formal $r needs type or class - 'int' assumed" */
#define syn_rerr_ellipsis_first "\243lip\247\015\050\340\275c5\174\277\007\
l\136\371\020"    /* "ellipsis (...) cannot be only parameter" */
#define syn_rerr_mixed_formals "p\347to\310\0035\202old-By\240\371\020\015\
mix\006"    /* "prototype and old-style parameters mixed" */
#define syn_rerr_open_member "\312\133\135\356emb\004K$r"    /* "illegal [] member: $r" */
#define syn_rerr_fn_returntype "\313\022t\350n\037$t \312-\206\330\037\264"    /* "function returning $t illegal -- assuming pointer" */
#define syn_rerr_array_elttype "\017r\306Y$t \312-\206\330\037\264"    /* "array of $t illegal -- assuming pointer" */
#define syn_rerr_fn_ptr(m,s) \
   "%s $r\356\306\174\277\313-\206\330\037\264"    /* "%s $r may not be function -- assuming pointer" */, errs_membobj(m), s
#define syn_rerr_fn_ptr1 \
        "\313$r\356\306\174\277\002\321\014\206\330\037\313\264"    /* "function $r may not be initialised - assuming function pointer" */
#define syn_rerr_archaic_init "Anci7\005\263 of\026\321a\254\270\226\003\'\
\075\'"    /* "Ancient form of initialisation, use '='" */
#define syn_rerr_bitfield "\312b\253\301\243d\140\244\003$t \206\374\035\
\330\006"    /* "illegal bit field type $t - 'int' assumed" */
#define syn_rerr_missing_formal "\263\200n\223\003m\342\227\313\234i\254"    /* "formal name missing in function definition" */
#define syn_rerr_ineffective "\274a\201\354 n\021eff\176t"    /* "declaration with no effect" */
#define syn_rerr_duplicate_member(sv,b) "d\325\302\034\003memb\230$r Y$\
c"    /* "duplicate member $r of $c" */, sv, b
#define syn_rerr_missing_type3 \
        "\310\003\033\217\100\015\377\006\014\050Qcep\005\227\313\234i\254\
\275\206\374\035\330\006"    /* "type or class needed (except in function definition) - 'int' assumed" */
#define syn_rerr_semicolon_in_arglist \
        "\',\035\050\174\'\073\'\275\336\335\034\361\263\200\371\020s"    /* "',' (not ';') separates formal parameters" */
#define syn_rerr_no_members "$c h\222n\021memb\004s"    /* "$c has no members" */

      /* The following remain as ordinary (uncompressed) strings */

#define syn_moan_hashif "#if <expression>"
#define syn_moan_case "case expression (ignored)"

 /* The next batch of things just get mapped onto syserr codes */

#define syserr_genpointer "genpointer&(%ld)"
#define syserr_initsubstatic "initsubstatic(bit)"
#define syserr_initstatic "initstatic(%ld,%#lx)"
#define syserr_initstatic1 "initstatic(%ld)"
#define syserr_rd_decl_init "rd_decl/init(%#lx)"
#define syserr_rd_typename "rd_typename()=0"
#define syserr_rdinit "syn_rdinit"
#define syserr_rd_declarator "rd_declarator(%ld)"
#define syserr_defaultstgclass "defaultstorageclass(%#x)"
#define syserr_rd_declrhslist "rd_declrhslist confused"
#define syserr_rd_decl2 "rd_decl2(%p,%ld)"
#define syserr_rd_strdecl "rd_strdecl"
#define syserr_lex_string "lex_string"

/* end of cfe/feerrs.h */
/*
 * arm/mcerrs.h - prototype for machine-specific error messages file
 */

  /* Ordinary error messages - mapped onto numeric codes */

/*
 * The following message is always machine specific since it may include
 * information about the source of support for the product.
 */
#ifdef TARGET_IS_HELIOS
#define misc_disaster_banner   "\n\364\364\024\370Th\003\366\036\230h\222\
\023t\3035\026\373\013\026\216s\032t7cy. Th\307c5 occ\350\205 \370b\176\
a\226\003\253h\222r\030 \204\344\317v\203\200\022s\204rc\003su\242 \222\
mem\011\136\033d\032k\205\205 \370\362\212\003\033b\176a\226\003\324\004\
\003\307\317faul\005\227\203. I\027y\204 c5\174e\100\036\136\013\020\205 \
\370y\204r p\347gr\223\140\021a\337\202ca\226\037\324\307r\017\003fa\036\
u\022\270pP\100\003\216t\212\005y\204r\205\370\023\013\004. Th\003\023\013\
\230m\306\277\352\233h\243p y\204 imm\006i\034\243\1365\202w\036l\205\205\
\205 \370\277\352\233\022p\011\005\317s\226p\303\366\036\230faul\372su\203\
\352\251\004ts.\205\205 \305\364\364\024\305\n"    /* "\n\
*************************************************************************\n\
* The compiler has detected an internal inconsistency. This can occur   *\n\
* because it has run out of a vital resource such as memory or disk     *\n\
* space or because there is a fault in it. If you cannot easily alter   *\n\
* your program to avoid causing this rare failure, please contact your  *\n\
* dealer. The dealer may be able to help you immediately and will       *\n\
* be able to report a suspected compiler fault to suitable experts.     *\n\
*************************************************************************\n\
\n" */
#else
#define misc_disaster_banner   "\n\364\364\024\370Th\003\366\036\230h\222\
\023t\3035\026\373\013\026\216s\032t7cy. Th\307c5 occ\350\205 \370b\176\
a\226\003\253h\222r\030 \204\344\317v\203\200\022s\204rc\003su\242 \222\
mem\011\136\033d\032k\205\205 \370\362\212\003\033b\176a\226\003\324\004\
\003\307\317faul\005\227\203. I\027y\204 c5\174e\100\036\136\013\020\205 \
\370y\204r p\347gr\223\140\021a\337\202ca\226\037\324\307r\017\003fa\036\
u\022\270pP\100\003\216t\212\005y\204r\205\370Ac\011n \023\013\004. Th\003\
\023\013\230m\306\277\352\233h\243p y\204 imm\006i\034\243\1365\202w\036\
l \370\277\352\233\022p\011\005\317s\226p\303\366\036\230faul\372Ac\011\
n Co\232u\020s.\205\205\205\305\364\364\024\305\n"    /* "\n\
*************************************************************************\n\
* The compiler has detected an internal inconsistency. This can occur   *\n\
* because it has run out of a vital resource such as memory or disk     *\n\
* space or because there is a fault in it. If you cannot easily alter   *\n\
* your program to avoid causing this rare failure, please contact your  *\n\
* Acorn dealer. The dealer may be able to help you immediately and will *\n\
* be able to report a suspected compiler fault to Acorn Computers.      *\n\
*************************************************************************\n\
\n" */
#endif

#define gen_warn_Lisp "L\032p-s\325p\011\005B\212k p\226h \377\006\014%\
ld"    /* "Lisp-support stack push needed %ld" */
#define obj_err_common "\022pe\267\231mm\031b\177ck $r"    /* "repeated common block $r" */
#define obj_err_common1 "\231mm\031b\177ck $r\140\333sm\013l"    /* "common block $r too small" */
#define obj_err_common2 "\231mm\031b\177ck $r\140\333l\316e"    /* "common block $r too large" */
#define armobj_fatalerr_toomany "T\333m5\136symbol\015\245ACORN \322k\004"    /* "Too many symbols for ACORN linker" */
#define armdbg_fatalerr_toobig \
        "De\300\025t\352\247z\003Qce\006\015\362\212\003\227Ac\011n AOF \
\263\034"    /* "Debug table size exceeds space in Acorn AOF format" */

  /* System failure messages - error text not preserved */

#define syserr_commondef "commondef %ld"
#define syserr_obj_checksym "obj_checksym($r)"
#define syserr_obj_codereloc "obj_coderelocation %.8lx"
#define syserr_obj_gendata "obj_gendata(%ld)"
#define syserr_obj_datalen "obj_data len=%ld"
#define syserr_obj_data1 "obj_data %ldEL%ld'%s'"
#define syserr_find_extsym "find_extsym"
#define syserr_duff_lab "asm_trailer(duff lab)"
#define syserr_asm_trailer "asm_trailer(%ld)"
#define syserr_asm_data "asm_data len=%ld"
#define syserr_asm_trailer1 "asm_trailer(%ldF%ld)"
#define syserr_asm_hdata "asm_hdata len=%ld"
#define syserr_module_reloc "Unsupported Arthur module relocation mode %d"
#define syserr_outinstr "outinstr(%lx)"
#define syserr_datasymb "Unable to find another data symbol at %ld"
#define syserr_shifts "Register & constant shift together"
#define syserr_remove_noop "remove_noops(MOVR r,r) failed"
#define syserr_silly_shift "Silly shift value %ld"
#define syserr_inline1 "armgen(J_INLINE1)"
#define syserr_jop_mode "Illegal JOP mode(%lx,%lx)"
#define syserr_gen_freg "freg %ld"
#define syserr_remove_fp_noop "remove_noops(MOVD/FR r,r) failed"
#define syserr_fp_const "%lx not an immediate fp constant"
#define syserr_show_inst_dir "show_inst_dir(%#lX)"
#define syserr_local_base "local_base %lx"
#define syserr_local_addr "local_address $b %lx"
/* #define syserr_neg_addr "negative local address %ld/%lx for $b" */
#define syserr_local_addr1 "local_addr"
#define syserr_debug_addr "debugger local_fpaddr confused"
#define syserr_displacement "displacement out of range %ld"
#define syserr_unknown_label "unknown label reference type %.8lx"
#define syserr_enter "emit(J_ENTER %ld)"
#define syserr_gen_eval "gen_eval %ld"
#define syserr_pendingstack_overflow "pending stack overflow"
#define syserr_setsp_confused "SETSP confused %ld!=%ld %ld"
#define syserr_callingstandard "Callingstandard %c"
#ifndef TARGET_HAS_AOUT
#define syserr_debugger_line "debugger #line confused"
#define syserr_addcodep "dbg_addcodep(twice)"
#define syserr_filetooffset "dbg_filetooffset(%s)"
#define syserr_dbg_bitfield "dbg_typerep(BITFIELD)"
#define syserr_dbg_typerep "dbg_typerep(%p,0x%lx)"
#define syserr_dbg_proc "dbg_proc"
#define syserr_dbg_proc1 "dbg_proc confused"
#define syserr_dbg_table "debugger table confusion(local variable $r %lx %lx)"
#define syserr_dbg_scope "dbg_scope"
#define syserr_dbg_write "dbg_write(%lx)"
#define syserr_dbg_struct "dbg_STRUCT confused"
#define syserr_dbg_fileinfobase "dbg_fileinfobase %ld != %ld"
#define syserr_dbgloc "dbgloc %ld != %ld"
#endif

/* end of arm/mcerrs.h */
#ifndef NO_INSTORE_FILES
#  define NO_INSTORE_FILES 1
#endif

#define COMPRESSED_ERROR_MESSAGES 1

#ifdef DEFINE_ERROR_COMPRESSION_TABLE

static unsigned short int ecompression_info[256] = {
    0x0000,0x2a2a,0x696e,0x6520,0x6572,0x7420,0x6564,0x6f6e,
    0x0101,0x6f72,0x000a,0x616c,0x0620,0x7320,0x7469,0x6172,
    0x7404,0x6f20,0x7265,0x6465,0x0808,0x6720,0x2002,0x6620,
    0x756e,0x0720,0x6973,0x0920,0x6174,0x2720,0x696c,0x0215,
    0x0020,0x0021,0x0022,0x0023,0x0024,0x0025,0x0026,0x0027,
    0x0028,0x0029,0x002a,0x002b,0x002c,0x002d,0x002e,0x002f,
    0x0030,0x0031,0x0032,0x0033,0x0034,0x616e,0x0036,0x656e,
    0x0038,0x0039,0x003a,0x003b,0x003c,0x003d,0x003e,0x003f,
    0x6173,0x0041,0x7374,0x0043,0x0044,0x0045,0x0046,0x0047,
    0x0048,0x0049,0x004a,0x3a20,0x004c,0x004d,0x004e,0x004f,
    0x6c65,0x6578,0x0052,0x0053,0x0054,0x0055,0x0056,0x6e6f,
    0x0058,0x6f17,0x005a,0x005b,0x005c,0x005d,0x7920,0x005f,
    0x2074,0x0061,0x0062,0x0063,0x0064,0x0065,0x0066,0x0067,
    0x0068,0x0069,0x006a,0x006b,0x006c,0x006d,0x006e,0x006f,
    0x0070,0x0071,0x0072,0x0073,0x0074,0x0075,0x0076,0x0077,
    0x0078,0x0079,0x007a,0x007b,0x5705,0x007d,0x6563,0x6c6f,
    0x0b20,0x0e19,0x6420,0x6974,0x6f75,0x2020,0x2d20,0x6967,
    0x756d,0x1414,0x6163,0x1366,0x1020,0x5067,0x6307,0x636c,
    0x2e2e,0x876e,0x610d,0x616d,0x706f,0x740c,0x7573,0x0220,
    0x0420,0x636f,0x6d70,0x7411,0x8b02,0x1620,0x6609,0x9402,
    0x6c03,0x1e8d,0x6368,0x656c,0x7970,0x661b,0x6963,0x7369,
    0x0274,0x5170,0x6162,0x6905,0x0e07,0x1863,0x66ad,0x9109,
    0x3e20,0x666f,0x7604,0x9e6d,0x9f10,0xaf06,0x138f,0x1c0c,
    0x2c20,0x4073,0x6340,0x6573,0xb60f,0x2920,0x6166,0x6203,
    0x6275,0x6669,0x6ca6,0x7e95,0xbe8c,0x2a0a,0x615e,0x690d,
    0x74a4,0x7783,0xa180,0xae81,0x0b1a,0x0ecc,0x0f67,0x6120,
    0x667f,0x69cd,0x6c02,0x6f70,0x7468,0x7570,0x760b,0xb118,
    0xb988,0x072d,0x1a73,0x6f11,0x6f69,0x700f,0x7365,0x76dc,
    0x902e,0xa20f,0xda1f,0x0472,0x0559,0x12b7,0x3774,0x726f,
    0x7572,0x9365,0xaaa0,0xc005,0xc968,0xe592,0x206d,0x2a20,
    0x6105,0x650d,0x7370,0x86b5,0x8989,0x8e42,0x999a,0xa9c3,
    0xc5ef,0xdde9,0x059b,0x106e,0x27a8,0x6265,0x6403,0x6e65};


#endif

#define MAXSTACKDEPTH 4

#endif /* already loaded */

/* end of errors.h */
@


1.1.1.1
log
@Initial Import of Norcroft C compiler for Transputer.
@
text
@@
