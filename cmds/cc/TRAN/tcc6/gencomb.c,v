head     1.1;
branch   1.1.1;
access   ;
symbols  ncc:1.1.1.1 ncc:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     93.07.21.14.07.46;  author nick;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     93.07.21.14.07.47;  author nick;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
#include <stdio.h>

#define	K 	3
#define N	8

char *items[] =
{
#if 0
	"si_l",
	"ui_l",
	"ss_l",
	"us_l",
	"sc_l",
	"uc_l"
#endif
#if 1
	"si",
	"ui",
	"ss_a",
	"ss_n",
	"us_a",
	"us_n",
	"sc",
	"uc"
#endif
};

void output(int *comb)
{
#if 0
	printf("%d %d %d %d\n",comb[1],comb[2],comb[3],comb[4]);
#endif
#if 0
	printf("\tpermexpr( %s, %s, %s, %s );\n",
		items[comb[1]-1],
		items[comb[2]-1],
		items[comb[3]-1],
		items[comb[4]-1]);
#endif
	printf("\tpermop(XX_p->%s, XX_p->%s, XX_p->%s, = );\n",
		items[comb[1]-1],
		items[comb[2]-1],
		items[comb[3]-1]);
}

int main()
{
	int comb[K+1];	
	int i,j;
	int n = N;
	int k = K;
	
	comb[0] = -1;
	
	for( i = 1; i <= K; i++ ) comb[i] = i;

	j = 1;

	while( j != 0 )
	{
		output(comb);

		j = k;

		while( comb[j] == n - k + j ) j--;

		comb[j]++;

		for( i = j+1; i <= K; i++ ) comb[i] = comb[i-1] + 1;
	}
}
@


1.1.1.1
log
@Initial Import of Norcroft C compiler for Transputer.
@
text
@@
