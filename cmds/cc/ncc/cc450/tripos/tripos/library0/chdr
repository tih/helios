GET "libhdr"
GET "iohdr"
GET "fh3manifests"
GET "manhdr"

GLOBAL
$(
   callmain       : ug
   c.delete       : ug+1
   c.input        : ug+2
   c.isinteractive: ug+3
   c.open         : ug+4
   c.output       : ug+5
   c.read         : ug+6
   c.seek         : ug+7
   c.write        : ug+8
   c.datstamp     : ug+9
   c.close        : ug+10
   c.alloc        : ug+11
   c.free         : ug+12
   cif            : ug+13
   cof            : ug+14
   callext        : ug+15
   cloadseg       : ug+16
   c.rename       : ug+17
$)

MANIFEST
$(
   argvupb = 49

   file.scb       = 0
   file.buf       = 1
   file.bufpos    = 2
   file.buflen    = 3
   file.len       = 4
   file.flags     = 5
   file.pos       = 6
   file.actualpos = 7
   file.lastchar  = 8
   file.upb       = 8

   BUFSIZ         = 1000

   binary.mask  = 1
   binary.shift = 0

   extended.mask  = 1
   extended.shift = 0

   DIRTYBIT = 2

   extended.mask  = 1
   extended.shift = 2
$)

LET set.dirty(file) BE
$( file!file.flags := file!file.flags | DIRTYBIT
$)
LET set.clean(file) BE
$( file!file.flags := file!file.flags & ~DIRTYBIT
$)
LET dirty(file) = (file!file.flags & DIRTYBIT) ~= 0

LET get.binary(file) = VALOF
$(
   RESULTIS (file!file.flags & (binary.mask << binary.shift)) ~= 0
$)
LET set.binary(file, b) BE
$( file!file.flags := file!file.flags & ~(binary.mask << binary.shift)
   file!file.flags := file!file.flags | ((b&binary.mask)<<binary.shift)
$)

LET extended(file) =
    (file!file.flags & (extended.mask << extended.shift)) ~= 0

LET set.extended(file,b) BE
$( file!file.flags := file!file.flags & ~(extended.mask << extended.shift)
   file!file.flags := file!file.flags | ((b&extended.mask)<<extended.shift)
$)
