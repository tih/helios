        TTL     > testprog

R0      RN      0
R1      RN      1
R2      RN      2
R3      RN      3
R4      RN      4
R14     RN      14
R15     RN      15
PC      RN      R15


        ; search for the Link adaptor podule
        MOV     R0,#&033C0000           ; simple synchronised
        MOV     R2,#0
floop
        LDRB    R1,[R0,#&00]            ; ID byte
        TSTS    R1,#(1 << 1)
        BNE     nploop
        ANDS    R1,R1,#&38
        BNE     nploop

        LDRB    R1,[R0,#&1C]            ; country
        CMP     R1,#&00                 ; UK
        LDREQB  R1,[R0,#&0C]            ; product LO
        CMPEQ   R1,#&24
        LDREQB  R1,[R0,#&10]            ; product HI
        CMPEQ   R1,#&00
        LDREQB  R1,[R0,#&14]            ; manufacturer LO
        CMPEQ   R1,#&0E
        LDREQB  R1,[R0,#&18]            ; manufacturer HI
        CMPEQ   R1,#&00
        BEQ     pfound
nploop
        ADD     R0,R0,#&00004000
        ADD     R2,R2,#1
        CMP     R2,#4
        BCC     floop                   ; look at next podule
        B       fatal                   ; podule not found

pfound
        ; R0 = synchronised podule base
        SUB     R1,R0,#&033C0000
        ADD     R1,R1,#&03340000
        ADD     R1,R1,#&00002000
        ; R1 = base address of link adaptor hardware

        MOV     R0,#(1 << 3)
        STRB    R0,[R1,#&10]

        ; wait for a short period of time
        MOV     R0,#&00200000
dloop
        SUBS    R0,R0,#&01
        BNE     dloop

        MOV     R0,#&00                 ; 10MHz
       ;MOV     R0,#(1 << 2)            ; 20MHz
        STRB    R0,[R1,#&10]

loop
        LDRB    R0,[R1,#&08]
        TST     R0,#&01
        BEQ     loop            ; wait until character

        LDRB    R0,[R1,#&00]    ; read character

loop2
        LDRB    R2,[R1,#&0C]
        TST     R2,#&01
        BEQ     loop2           ; wait until empty

        STRB    R0,[R1,#&04]    ; echo character back
        B       loop

fatal
        MOV     R0,#(32 :SHL: 20)       ; bottom of physram
        SUB     R1,R0,#(128 :SHL: 10)   ; bottom of screen/sound memory
        MOV     R2,#&FF000000
        ORR     R2,R2,#&0000AA00
fatal_loop
        STR     R2,[R1],#&04
        CMP     R1,R0
        BNE     fatal_loop
        B       fatal

        END
