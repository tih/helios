-- File:	hw_pida.a
-- Subsystem:	Helios-ARM executive
-- Author:	P.A.Beskeen
-- Date:	March '93
--
-- Description: VLSI VY86PID specific hardware assembler functions.
--
--
-- RcsId: $Id: hw_pida.a,v 1.1 1993/08/24 08:45:33 paul Exp $
--
-- (C) Copyright 1992 Perihelion Software Ltd.
-- All Rights Reserved.
--
-- RcsLog: $Log: hw_pida.a,v $
-- Revision 1.1  1993/08/24  08:45:33  paul
-- Initial revision
--
--
--

include ../gexec.m	-- Executive manifests
include module.m
include ARM/vy86pid.m


_if _not _defp '__VY86PID [
	error "This source file should only be used for VLSI PID systems"
]



------------------------------------------------------------------------------
-- Hardware initialisation functions

-- void IO_Init(void);
--
-- Initialises I/O world to aquescent state.
--
-- Called in SVC mode.
-- Called from C so must conform to PCS.

	Function IO_Init

	-- Default interrupt and I/O world to zero.

	mov	tmp, hw_INTC
	mov	a1, 0

	strb	a1, (tmp, hw_intc.IRQM)
	strb	a1, (tmp, hw_intc.FIQM)

	movs	pc, lr


-- void MEM_Init(void);
--
-- Initialises Memory system to default state.
--
-- Called in SVC mode.
-- Called from C so must conform to PCS.

	Function MEM_Init

	warning "@@@ MEM_Init not coded"

	movs	pc, lr



-- void ResetCPU(void);
--
-- Reset the processor and restart boot sequence. Caused by a Terminate
-- protocol being received by a link guardian.
--
-- In a single processor system this function is not required.
--
-- Called by C so must conform to PCS (ha - no return buddy so forget it)
-- SVC mode assumed.

	Function ResetCPU

	-- Disable FIQ and IRQ
	AllIntsOff

HaltLoop:
	b	HaltLoop

	warning "@@@ Code required to restart bootstrap or Helios, or reset CPU"



------------------------------------------------------------------------------
-- Functions to support system timer interrupts
--
-- These are used for thread time slicing, timer Q handling and system time
-- keeping. There are further hardware specific timer dependecies in both
-- armintr.a (timer interrupt source recognition) and armslice.a (timer
-- interrupt clearing).


_if _false [

-- *Warning* Use C versions - these assembler versions are not even coded
-- for the PID board.

-- void ClockIntsOn(void);
--
-- Enable time slicer clock interrupts.
--
-- Called in SVC mode.
-- Called from C so must conform to PCS.

	Function ClockIntsOn

	-- Enable IOC timer 0 interrupts

	mov	tmp, IOC_base
	ldrb	a1, (tmp, ioc_regs.irq_a + intr_block.mask)
	orr	a1, IRQA_TM0
	strb	a1, (tmp, ioc_regs.irq_a + intr_block.mask)
	movs	pc, lr


-- void ClockIntsOff(void);
--
-- Disable time slicer clock interrupts, without having to change the processor
-- interrupt mask.
--
-- Called in SVC mode.
-- Called from C so must conform to PCS.

	Function ClockIntsOff

	-- Disable IOC timer 0 interrupts

	mov	tmp, IOC_base
	ldrb	a1, (tmp, ioc_regs.irq_a + intr_block.mask)
	bic	a1, IRQA_TM0
	strb	a1, (tmp, ioc_regs.irq_a + intr_block.mask)
	movs	pc, lr
]


-- end of hw_pida.a
