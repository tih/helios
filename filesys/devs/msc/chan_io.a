------------------------------------------------------------------------------
--                                                                          --
--                         H E L I O S                                      --
--                         -----------                                      --
--                                                                          --
--             Copyright (C) 1987, Perihelion Software Ltd.                 --
--                        All Rights Reserved.                              --
--                                                                          --
--                                                                          --
--                                                                          --
------------------------------------------------------------------------------
------------------------------------------------------------------------------
-- SUBSYSTEM NAME: OCCAM LIBRARY                                            --
--                                                                          --
-- MODULE NAME: chan_io                                                     --
--                                                                          --
-- FILENAME: chan_io.a                                                      --
--                                                                          --
-- AUTHOR: C.H.R.G                                                          --
--                                                                          --
-- DATE: 30:8:88                                                            --
--                                                                          --
------------------------------------------------------------------------------
--
--FUNCTION :
--		Routines to perform direct channel communication
--
--
------------------------------------------------------------------------------
-- UPDATES :
------------------------------------------------------------------------------

include basic.m
include procs.m
include structs.m
include debug.m

_def bytesperword  4	-- bytes per word

-- Define Module

-- StartModule  chan_io -1 1 



------------------------------------------------------------------------------
-- ChanRead (Channel *chan, byte *buffer, int len)
-- =========
-- 	Read a block of data from the given channel. 
--	Returns -1 if no. of bytes to read < 1
------------------------------------------------------------------------------

proc ChanRead
[
	word	chan		-- input channel
	word    buffer		-- input buffer
	word	len		-- no. of bytes to read
]
[]
[
--Regs
	ldc	1
	len			-- bytes to transfer
	gt			-- < 0 ?	
	cj	..2		-- no -> 2
	ldc	-1
	ret
	
..2:
	buffer			-- ptr to buffer
	chan			-- channel address
	len			-- bytes to transfer

	in

-- Return
	return
]



------------------------------------------------------------------------------
-- ChanWrite (Channel *chan, byte *buffer, int len)
-- =========
-- 	Write a block of data to the given channel. 
--	Returns -1 if no. of bytes to write < 1
------------------------------------------------------------------------------

proc ChanWrite
[
	word	chan		-- input channel
	word	buffer		-- input buffer
	word	len		-- no. of bytes to write
]
[]
[
	ldc	1
	len			-- bytes to transfer
	gt			-- < 0 ?	
	cj	..3		-- no -> 3
	ldc	-1
	ret
	
..3:
	buffer			-- ptr to buffer
	chan			-- channel address
	len			-- bytes to transfer

	out

-- Return
	return
]



------------------------------------------------------------------------------
-- ReadWord (Channel *chan)
-- =========
-- 	Reads a word from the given channel.
--
------------------------------------------------------------------------------

proc ReadWord
[
	word	chan		-- input channel
]
[
	word	buffer
]
[
	ptr	buffer		-- ptr to buffer
	chan			-- channel address
	ldc	bytesperword	-- bytes to transfer

	in

	buffer

-- Return
	return
]




------------------------------------------------------------------------------
-- WriteWord (Channel *chan, word data)
-- =========
-- 	Writes a word to the given channel.
--
------------------------------------------------------------------------------

proc WriteWord
[
	word	chan		-- input channel
	word	data
]
[
	word	temp		-- n.b outword uses Wptr+0 as temp
]

[
	chan			-- channel address
	data			-- data word

	outword

-- Return
	return
]




------------------------------------------------------------------------------
-- ReadByte (Channel *chan)
-- ========
-- 	Reads a byte from the given channel.
--
------------------------------------------------------------------------------

proc ReadByte
[
	word	chan		-- input channel
]
[
	word	buffer
]
[
	ldc	0
	store	buffer		-- clear buffer

	ptr	buffer		-- ptr to buffer
	chan			-- channel address
	ldc	1		-- bytes to transfer

	in

	buffer

-- Return
	return
]




------------------------------------------------------------------------------
-- WriteByte (Channel *chan, word data)
-- =========
-- 	Writes a byte to the given channel.
--
------------------------------------------------------------------------------

proc WriteByte
[
	word	chan		-- input channel
	word	data
]
[
	word	temp		-- N.B outbyte uses Wptr+0 as temp
]

[
	chan			-- channel address
	data			-- data byte

	outbyte

-- Return
	return
]



--include debug.a

-- Initialisation entry for Module

static [

	extern func ChanRead
	extern func ChanWrite
	extern func ReadWord
	extern func WriteWord
	extern func ReadByte
	extern func WriteByte
]

-- EndModule []

-- End of chan_io
